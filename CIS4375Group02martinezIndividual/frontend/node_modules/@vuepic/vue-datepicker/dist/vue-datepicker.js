import { openBlock as D, createElementBlock as G, createElementVNode as me, unref as u, reactive as zt, computed as Q, ref as x, toRef as ea, watch as pt, h as Yn, render as Ua, defineComponent as Ee, renderSlot as ie, createCommentVNode as X, normalizeClass as De, withKeys as pe, createBlock as Me, withModifiers as $e, nextTick as it, onMounted as Ue, onUnmounted as aa, normalizeProps as Be, mergeProps as Ne, Fragment as ke, normalizeStyle as Je, createTextVNode as dt, toDisplayString as Ve, onBeforeUpdate as In, renderList as Se, withDirectives as Jt, vShow as Zt, withCtx as ye, createVNode as Qe, Transition as Bt, createSlots as ze, useSlots as Tt, guardReactiveProps as He, resolveDynamicComponent as na, getCurrentScope as Nn, onScopeDispose as En, isRef as Ka, Teleport as Fn } from "vue";
import { format as nt, isEqual as Pt, setHours as ln, setMinutes as rn, setSeconds as Ca, setMilliseconds as _a, isAfter as Lt, getYear as ge, getMonth as be, setMonth as Ln, setYear as at, addMonths as Dt, subMonths as Vt, isValid as xt, isBefore as Wt, set as Ae, eachDayOfInterval as on, getHours as Ze, getMinutes as lt, getSeconds as Ct, startOfWeek as sn, endOfWeek as Vn, parse as Sa, isDate as Wn, addHours as Hn, addYears as un, subYears as dn, addDays as Mt, getDay as zn, differenceInCalendarDays as Un, add as cn, sub as Kn, getWeek as jn, getISOWeek as Gn, isSameQuarter as ja, eachQuarterOfInterval as Qn, startOfYear as qn, endOfYear as Xn, startOfQuarter as Jn, endOfQuarter as Ga, getQuarter as Qa } from "date-fns";
function Yt() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      me("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      me("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      me("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
Yt.compatConfig = {
  MODE: 3
};
function fn() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      me("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
fn.compatConfig = {
  MODE: 3
};
function Oa() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
Oa.compatConfig = {
  MODE: 3
};
function Ba() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
Ba.compatConfig = {
  MODE: 3
};
function Ya() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      me("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
Ya.compatConfig = {
  MODE: 3
};
function Ia() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
Ia.compatConfig = {
  MODE: 3
};
function Na() {
  return D(), G(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      me("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
Na.compatConfig = {
  MODE: 3
};
function qa(e) {
  return (t) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`)).slice(0, 2);
}
function Zn(e) {
  return (t) => nt(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`), "EEEEEE", { locale: e });
}
const xn = (e, t, r) => {
  const n = [1, 2, 3, 4, 5, 6, 7];
  let a;
  if (e !== null)
    try {
      a = n.map(Zn(e));
    } catch {
      a = n.map(qa(t));
    }
  else
    a = n.map(qa(t));
  const f = a.slice(0, r), o = a.slice(r + 1, a.length);
  return [a[r]].concat(...o).concat(...f);
}, Ea = (e, t, r) => {
  const n = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    n.push({ value: +a, text: gn(a, t) });
  return r ? n.reverse() : n;
}, vn = (e, t, r) => {
  const n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((f) => {
    const o = f < 10 ? `0${f}` : f;
    return /* @__PURE__ */ new Date(`2017-${o}-01T00:00:00+00:00`);
  });
  if (e !== null)
    try {
      const f = r === "long" ? "MMMM" : "MMM";
      return n.map((o, s) => {
        const C = nt(o, f, { locale: e });
        return {
          text: C.charAt(0).toUpperCase() + C.substring(1),
          value: s
        };
      });
    } catch {
    }
  const a = new Intl.DateTimeFormat(t, { month: r, timeZone: "UTC" });
  return n.map((f, o) => {
    const s = a.format(f);
    return {
      text: s.charAt(0).toUpperCase() + s.substring(1),
      value: o
    };
  });
}, el = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Ie = (e) => {
  const t = u(e);
  return t != null && t.$el ? t == null ? void 0 : t.$el : t;
}, tl = (e) => ({ type: "dot", ...e ?? {} }), mn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Fa = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Oe = (e) => e, Xa = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Ja = (e) => e === null, pn = (e) => {
  if (e)
    return [...e.querySelectorAll("input, button, select, textarea, a[href]")][0];
}, al = (e) => {
  const t = [], r = (n) => n.filter((a) => a);
  for (let n = 0; n < e.length; n += 3) {
    const a = [e[n], e[n + 1], e[n + 2]];
    t.push(r(a));
  }
  return t;
}, Ht = (e, t, r) => {
  const n = r != null, a = t != null;
  if (!n && !a)
    return !1;
  const f = +r, o = +t;
  return n && a ? +e > f || +e < o : n ? +e > f : a ? +e < o : !1;
}, _t = (e, t) => al(e).map((r) => r.map((n) => {
  const { active: a, disabled: f, isBetween: o, highlighted: s } = t(n);
  return {
    ...n,
    active: a,
    disabled: f,
    className: {
      dp__overlay_cell_active: a,
      dp__overlay_cell: !a,
      dp__overlay_cell_disabled: f,
      dp__overlay_cell_pad: !0,
      dp__overlay_cell_active_disabled: f && a,
      dp__cell_in_between: o,
      "dp--highlighted": s
    }
  };
})), vt = (e, t, r = !1) => {
  e && t.allowStopPropagation && (r && e.stopImmediatePropagation(), e.stopPropagation());
}, nl = () => [
  "a[href]",
  "area[href]",
  "input:not([disabled]):not([type='hidden'])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "[tabindex]:not([tabindex='-1'])",
  "[data-datepicker-instance]"
].join(", ");
function ll(e, t) {
  let r = [...document.querySelectorAll(nl())];
  r = r.filter((a) => !e.contains(a) || a.hasAttribute("data-datepicker-instance"));
  const n = r.indexOf(e);
  if (n >= 0 && (t ? n - 1 >= 0 : n + 1 <= r.length))
    return r[n + (t ? -1 : 1)];
}
const rl = (e, t) => e == null ? void 0 : e.querySelector(`[data-dp-element="${t}"]`), gn = (e, t) => new Intl.NumberFormat(t, { useGrouping: !1, style: "decimal" }).format(e), La = (e) => nt(e, "dd-MM-yyyy"), ga = (e) => Array.isArray(e), ta = (e, t) => t.get(La(e)), ol = (e, t) => e ? t ? t instanceof Map ? !!ta(e, t) : t(W(e)) : !1 : !0, Za = (e, t, r, n, a, f) => {
  const o = Sa(e, t.slice(0, e.length), /* @__PURE__ */ new Date(), { locale: f });
  return xt(o) && Wn(o) ? n || a ? o : Ae(o, {
    hours: +r.hours,
    minutes: +(r == null ? void 0 : r.minutes),
    seconds: +(r == null ? void 0 : r.seconds),
    milliseconds: 0
  }) : null;
}, sl = (e, t, r, n, a, f) => {
  const o = Array.isArray(r) ? r[0] : r;
  if (typeof t == "string")
    return Za(e, t, o, n, a, f);
  if (Array.isArray(t)) {
    let s = null;
    for (const C of t)
      if (s = Za(e, C, o, n, a, f), s)
        break;
    return s;
  }
  return typeof t == "function" ? t(e) : null;
}, W = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), ul = (e, t, r) => {
  if (t) {
    const a = (e.getMonth() + 1).toString().padStart(2, "0"), f = e.getDate().toString().padStart(2, "0"), o = e.getHours().toString().padStart(2, "0"), s = e.getMinutes().toString().padStart(2, "0"), C = r ? e.getSeconds().toString().padStart(2, "0") : "00";
    return `${e.getFullYear()}-${a}-${f}T${o}:${s}:${C}.000Z`;
  }
  const n = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(n).toISOString();
}, je = (e) => {
  let t = W(JSON.parse(JSON.stringify(e)));
  return t = ln(t, 0), t = rn(t, 0), t = Ca(t, 0), t = _a(t, 0), t;
}, mt = (e, t, r, n) => {
  let a = e ? W(e) : W();
  return (t || t === 0) && (a = ln(a, +t)), (r || r === 0) && (a = rn(a, +r)), (n || n === 0) && (a = Ca(a, +n)), _a(a, 0);
}, Pe = (e, t) => !e || !t ? !1 : Wt(je(e), je(t)), we = (e, t) => !e || !t ? !1 : Pt(je(e), je(t)), _e = (e, t) => !e || !t ? !1 : Lt(je(e), je(t)), la = (e, t, r) => e != null && e[0] && (e != null && e[1]) ? _e(r, e[0]) && Pe(r, e[1]) : e != null && e[0] && t ? _e(r, e[0]) && Pe(r, t) || Pe(r, e[0]) && _e(r, t) : !1, Xe = (e) => {
  const t = Ae(new Date(e), { date: 1 });
  return je(t);
}, ya = (e, t, r) => t && (r || r === 0) ? Object.fromEntries(
  ["hours", "minutes", "seconds"].map((n) => n === t ? [n, r] : [n, isNaN(+e[n]) ? void 0 : +e[n]])
) : {
  hours: isNaN(+e.hours) ? void 0 : +e.hours,
  minutes: isNaN(+e.minutes) ? void 0 : +e.minutes,
  seconds: isNaN(+e.seconds) ? void 0 : +e.seconds
}, $t = (e) => ({
  hours: Ze(e),
  minutes: lt(e),
  seconds: Ct(e)
}), yn = (e, t) => {
  if (t) {
    const r = ge(W(t));
    if (r > e)
      return 12;
    if (r === e)
      return be(W(t));
  }
}, hn = (e, t) => {
  if (t) {
    const r = ge(W(t));
    return r < e ? -1 : r === e ? be(W(t)) : void 0;
  }
}, Ot = (e) => {
  if (e)
    return ge(W(e));
}, bn = (e, t) => {
  const r = _e(e, t) ? t : e, n = _e(t, e) ? t : e;
  return on({ start: r, end: n });
}, il = (e) => {
  const t = Dt(e, 1);
  return { month: be(t), year: ge(t) };
}, ot = (e, t) => {
  const r = sn(e, { weekStartsOn: +t }), n = Vn(e, { weekStartsOn: +t });
  return [r, n];
}, kn = (e, t) => {
  const r = {
    hours: Ze(W()),
    minutes: lt(W()),
    seconds: t ? Ct(W()) : 0
  };
  return Object.assign(r, e);
}, ft = (e, t, r) => [Ae(W(e), { date: 1 }), Ae(W(), { month: t, year: r, date: 1 })], st = (e, t, r) => {
  let n = e ? W(e) : W();
  return (t || t === 0) && (n = Ln(n, t)), r && (n = at(n, r)), n;
}, wn = (e, t, r, n, a) => {
  if (!n || a && !t || !a && !r)
    return !1;
  const f = a ? Dt(e, 1) : Vt(e, 1), o = [be(f), ge(f)];
  return a ? !cl(...o, t) : !dl(...o, r);
}, dl = (e, t, r) => Pe(...ft(r, e, t)) || we(...ft(r, e, t)), cl = (e, t, r) => _e(...ft(r, e, t)) || we(...ft(r, e, t)), Mn = (e, t, r, n, a, f, o) => {
  if (typeof t == "function" && !o)
    return t(e);
  const s = r ? { locale: r } : void 0;
  return Array.isArray(e) ? `${nt(e[0], f, s)}${a && !e[1] ? "" : n}${e[1] ? nt(e[1], f, s) : ""}` : nt(e, f, s);
}, St = (e) => {
  if (e)
    return null;
  throw new Error(Fa.prop("partial-range"));
}, qt = (e, t) => {
  if (t)
    return e();
  throw new Error(Fa.prop("range"));
}, Ra = (e) => Array.isArray(e) ? xt(e[0]) && (e[1] ? xt(e[1]) : !0) : e ? xt(e) : !1, fl = (e, t) => Ae(t ?? W(), {
  hours: +e.hours || 0,
  minutes: +e.minutes || 0,
  seconds: +e.seconds || 0
}), ha = (e, t, r, n) => {
  if (!e)
    return !0;
  if (n) {
    const a = r === "max" ? Wt(e, t) : Lt(e, t), f = { seconds: 0, milliseconds: 0 };
    return a || Pt(Ae(e, f), Ae(t, f));
  }
  return r === "max" ? e.getTime() <= t.getTime() : e.getTime() >= t.getTime();
}, ba = (e, t, r) => e ? fl(e, t) : W(r ?? t), xa = (e, t, r, n, a) => {
  if (Array.isArray(n)) {
    const o = ba(e, n[0], t), s = ba(e, n[1], t);
    return ha(n[0], o, r, !!t) && ha(n[1], s, r, !!t) && a;
  }
  const f = ba(e, n, t);
  return ha(n, f, r, !!t) && a;
}, ka = (e) => Ae(W(), $t(e)), vl = (e, t) => e instanceof Map ? Array.from(e.values()).filter((r) => ge(W(r)) === t).map((r) => be(r)) : [], Dn = (e, t, r) => typeof e == "function" ? e({ month: t, year: r }) : !!e.months.find((n) => n.month === t && n.year === r), Va = (e, t) => typeof e == "function" ? e(t) : e.years.includes(t), Et = zt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), $n = () => {
  const e = (n) => {
    Et.menuFocused = n;
  }, t = (n) => {
    Et.shiftKeyInMenu !== n && (Et.shiftKeyInMenu = n);
  };
  return {
    control: Q(() => ({ shiftKeyInMenu: Et.shiftKeyInMenu, menuFocused: Et.menuFocused })),
    setMenuFocused: e,
    setShiftKey: t
  };
}, Te = zt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), wa = x(null), Xt = x(!1), Ma = x(!1), Da = x(!1), $a = x(!1), Le = x(0), Ce = x(0), gt = () => {
  const e = Q(() => Xt.value ? [...Te.selectionGrid, Te.actionRow].filter((T) => T.length) : Ma.value ? [
    ...Te.timePicker[0],
    ...Te.timePicker[1],
    $a.value ? [] : [wa.value],
    Te.actionRow
  ].filter((T) => T.length) : Da.value ? [...Te.monthPicker, Te.actionRow] : [Te.monthYear, ...Te.calendar, Te.time, Te.actionRow].filter((T) => T.length)), t = (T) => {
    Le.value = T ? Le.value + 1 : Le.value - 1;
    let H = null;
    e.value[Ce.value] && (H = e.value[Ce.value][Le.value]), !H && e.value[Ce.value + (T ? 1 : -1)] ? (Ce.value = Ce.value + (T ? 1 : -1), Le.value = T ? 0 : e.value[Ce.value].length - 1) : H || (Le.value = T ? Le.value - 1 : Le.value + 1);
  }, r = (T) => {
    if (Ce.value === 0 && !T || Ce.value === e.value.length && T)
      return;
    Ce.value = T ? Ce.value + 1 : Ce.value - 1, e.value[Ce.value] ? e.value[Ce.value] && !e.value[Ce.value][Le.value] && Le.value !== 0 && (Le.value = e.value[Ce.value].length - 1) : Ce.value = T ? Ce.value - 1 : Ce.value + 1;
  }, n = (T) => {
    let H = null;
    e.value[Ce.value] && (H = e.value[Ce.value][Le.value]), H ? H.focus({ preventScroll: !Xt.value }) : Le.value = T ? Le.value - 1 : Le.value + 1;
  }, a = () => {
    t(!0), n(!0);
  }, f = () => {
    t(!1), n(!1);
  }, o = () => {
    r(!1), n(!0);
  }, s = () => {
    r(!0), n(!0);
  }, C = (T, H) => {
    Te[H] = T;
  }, A = (T, H) => {
    Te[H] = T;
  }, y = () => {
    Le.value = 0, Ce.value = 0;
  };
  return {
    buildMatrix: C,
    buildMultiLevelMatrix: A,
    setTimePickerBackRef: (T) => {
      wa.value = T;
    },
    setSelectionGrid: (T) => {
      Xt.value = T, y(), T || (Te.selectionGrid = []);
    },
    setTimePicker: (T, H = !1) => {
      Ma.value = T, $a.value = H, y(), T || (Te.timePicker[0] = [], Te.timePicker[1] = []);
    },
    setTimePickerElements: (T, H = 0) => {
      Te.timePicker[H] = T;
    },
    arrowRight: a,
    arrowLeft: f,
    arrowUp: o,
    arrowDown: s,
    clearArrowNav: () => {
      Te.monthYear = [], Te.calendar = [], Te.time = [], Te.actionRow = [], Te.selectionGrid = [], Te.timePicker[0] = [], Te.timePicker[1] = [], Xt.value = !1, Ma.value = !1, $a.value = !1, Da.value = !1, y(), wa.value = null;
    },
    setMonthPicker: (T) => {
      Da.value = T, y();
    },
    refSets: Te
    // exposed for testing
  };
}, ut = (e, t) => t ? new Date(e.toLocaleString("en-US", { timeZone: t })) : new Date(e), An = (e, t) => {
  const r = Pa(e, t);
  return r || W();
}, ml = (e, t) => t.dateInTz ? ut(new Date(e), t.dateInTz) : W(e), Pa = (e, t) => {
  if (!e)
    return null;
  if (!t)
    return W(e);
  const r = W(e);
  return t.exactMatch ? ml(e, t) : ut(r, t.timezone);
}, pl = (e) => {
  if (!e)
    return 0;
  const t = /* @__PURE__ */ new Date(), r = new Date(t.toLocaleString("en-US", { timeZone: "UTC" })), n = new Date(t.toLocaleString("en-US", { timeZone: e })), a = n.getTimezoneOffset() / 60;
  return (+r - +n) / (1e3 * 60 * 60) - a;
}, en = (e) => ({
  menuAppearTop: "dp-menu-appear-top",
  menuAppearBottom: "dp-menu-appear-bottom",
  open: "dp-slide-down",
  close: "dp-slide-up",
  next: "calendar-next",
  previous: "calendar-prev",
  vNext: "dp-slide-up",
  vPrevious: "dp-slide-down",
  ...e ?? {}
}), gl = (e) => ({
  toggleOverlay: "Toggle overlay",
  menu: "Datepicker menu",
  input: "Datepicker input",
  calendarWrap: "Calendar wrapper",
  calendarDays: "Calendar days",
  openTimePicker: "Open time picker",
  closeTimePicker: "Close time Picker",
  incrementValue: (t) => `Increment ${t}`,
  decrementValue: (t) => `Decrement ${t}`,
  openTpOverlay: (t) => `Open ${t} overlay`,
  amPmButton: "Switch AM/PM mode",
  openYearsOverlay: "Open years overlay",
  openMonthsOverlay: "Open months overlay",
  nextMonth: "Next month",
  prevMonth: "Previous month",
  nextYear: "Next year",
  prevYear: "Previous year",
  day: void 0,
  weekDay: void 0,
  ...e ?? {}
}), tn = (e) => e ? typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2 : 0, yl = (e) => {
  const t = typeof e == "object" && e, r = {
    static: !0,
    solo: !1
  };
  if (!e)
    return { ...r, count: tn(!1) };
  const n = t ? e : {}, a = t ? n.count ?? !0 : e, f = tn(a);
  return Object.assign(r, n, { count: f });
}, hl = (e, t, r) => e || (typeof r == "string" ? r : t), bl = (e) => typeof e == "boolean" ? e ? en({}) : !1 : en(e), kl = (e) => {
  const t = {
    enterSubmit: !0,
    tabSubmit: !0,
    openMenu: !0,
    selectOnFocus: !1,
    rangeSeparator: " - "
  };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : { ...t, enabled: e };
}, wl = (e) => ({
  months: [],
  years: [],
  times: { hours: [], minutes: [], seconds: [] },
  ...e ?? {}
}), Ml = (e) => ({
  showSelect: !0,
  showCancel: !0,
  showNow: !1,
  showPreview: !0,
  ...e ?? {}
}), Dl = (e) => {
  const t = { input: !1 };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : {
    enabled: e,
    ...t
  };
}, $l = (e) => ({ ...{
  allowStopPropagation: !0,
  closeOnScroll: !1,
  modeHeight: 255,
  allowPreventDefault: !1,
  closeOnClearValue: !0,
  closeOnAutoApply: !0,
  noSwipe: !1,
  keepActionRow: !1,
  onClickOutside: void 0,
  tabOutClosesMenu: !0
}, ...e ?? {} }), Al = (e) => {
  const t = {
    dates: Array.isArray(e) ? e.map((r) => W(r)) : [],
    years: [],
    months: [],
    quarters: [],
    weeks: [],
    weekdays: [],
    options: { highlightDisabled: !1 }
  };
  return typeof e == "function" ? e : { ...t, ...e ?? {} };
}, Tl = (e) => typeof e == "object" ? {
  type: (e == null ? void 0 : e.type) ?? "local",
  hideOnOffsetDates: (e == null ? void 0 : e.hideOnOffsetDates) ?? !1
} : {
  type: e,
  hideOnOffsetDates: !1
}, Sl = (e, t) => {
  const r = {
    noDisabledRange: !1,
    showLastInRange: !0,
    minMaxRawRange: !1,
    partialRange: !0,
    disableTimeRangeValidation: !1,
    maxRange: void 0,
    minRange: void 0,
    autoRange: void 0,
    fixedStart: !1,
    fixedEnd: !1
  };
  return typeof e == "object" ? { enabled: !0, ...r, ...e } : {
    enabled: e,
    noDisabledRange: t.noDisabledRange,
    showLastInRange: t.showLastInRange,
    minMaxRawRange: t.minMaxRawRange,
    partialRange: t.partialRange,
    disableTimeRangeValidation: t.disableTimeRangeValidation,
    maxRange: t.maxRange,
    minRange: t.minRange,
    autoRange: t.autoRange,
    fixedStart: t.fixedStart,
    fixedEnd: t.fixedEnd
  };
}, Rl = (e, t) => e ? typeof e == "string" ? { timezone: e, exactMatch: !1, dateInTz: void 0, emitTimezone: t, convertModel: !0 } : {
  timezone: e.timezone,
  exactMatch: e.exactMatch ?? !1,
  dateInTz: e.dateInTz ?? void 0,
  emitTimezone: t ?? e.emitTimezone,
  convertModel: e.convertModel ?? !0
} : { timezone: void 0, exactMatch: !1, emitTimezone: t }, Aa = (e, t) => new Map(
  e.map((r) => {
    const n = An(r, t);
    return [La(n), n];
  })
), Pl = (e, t) => e.length ? new Map(
  e.map((r) => {
    const n = An(r.date, t);
    return [La(n), r];
  })
) : null, Cl = (e, t, r, n, a, f, o) => ({
  minDate: Pa(e, o),
  maxDate: Pa(t, o),
  disabledDates: ga(r) ? Aa(r, o) : r,
  allowedDates: ga(n) ? Aa(n, o) : null,
  highlight: typeof a == "object" && ga(a == null ? void 0 : a.dates) ? Aa(a.dates, o) : a,
  markers: Pl(f, o)
}), _l = (e, t) => typeof e == "boolean" ? { enabled: e, dragSelect: !0, limit: +t } : {
  enabled: !!e,
  limit: e.limit ? +e.limit : null,
  dragSelect: e.dragSelect ?? !0
}, Re = (e) => {
  const t = () => {
    const I = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${I}` : `hh:mm${I} aa`;
  }, r = () => {
    var I;
    return e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? t() : e.weekPicker ? `${((I = F.value) == null ? void 0 : I.type) === "iso" ? "RR" : "ww"}-yyyy` : e.yearPicker ? "yyyy" : e.quarterPicker ? "QQQ/yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${t()}` : "MM/dd/yyyy";
  }, n = (I) => kn(I, e.enableSeconds), a = () => P.value.enabled ? e.startTime && Array.isArray(e.startTime) ? [n(e.startTime[0]), n(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? n(e.startTime) : null, f = Q(() => yl(e.multiCalendars)), o = Q(() => a()), s = Q(() => gl(e.ariaLabels)), C = Q(() => wl(e.filters)), A = Q(() => bl(e.transitions)), y = Q(() => Ml(e.actionRow)), R = Q(
    () => hl(e.previewFormat, e.format, r())
  ), w = Q(() => kl(e.textInput)), Y = Q(() => Dl(e.inline)), E = Q(() => $l(e.config)), M = Q(() => Al(e.highlight)), F = Q(() => Tl(e.weekNumbers)), T = Q(() => Rl(e.timezone, e.emitTimezone)), H = Q(() => _l(e.multiDates, e.multiDatesLimit)), B = Q(
    () => Cl(
      e.minDate,
      e.maxDate,
      e.disabledDates,
      e.allowedDates,
      M.value,
      e.markers,
      T.value
    )
  ), P = Q(
    () => Sl(e.range, {
      minMaxRawRange: !1,
      maxRange: e.maxRange,
      minRange: e.minRange,
      noDisabledRange: e.noDisabledRange,
      showLastInRange: e.showLastInRange,
      partialRange: e.partialRange,
      disableTimeRangeValidation: e.disableTimeRangeValidation,
      autoRange: e.autoRange,
      fixedStart: e.fixedStart,
      fixedEnd: e.fixedEnd
    })
  );
  return {
    defaultedTransitions: A,
    defaultedMultiCalendars: f,
    defaultedStartTime: o,
    defaultedAriaLabels: s,
    defaultedFilters: C,
    defaultedActionRow: y,
    defaultedPreviewFormat: R,
    defaultedTextInput: w,
    defaultedInline: Y,
    defaultedConfig: E,
    defaultedHighlight: M,
    defaultedWeekNumbers: F,
    defaultedRange: P,
    propDates: B,
    defaultedTz: T,
    defaultedMultiDates: H,
    getDefaultPattern: r,
    getDefaultStartTime: a
  };
}, Ol = (e, t, r) => {
  const n = x(), { defaultedTextInput: a, defaultedRange: f, defaultedTz: o, defaultedMultiDates: s, getDefaultPattern: C } = Re(t), A = x(""), y = ea(t, "format");
  pt(
    n,
    () => {
      e("internal-model-change", n.value);
    },
    { deep: !0 }
  ), pt(y, () => {
    h();
  });
  const R = (l) => o.value.timezone && o.value.convertModel ? ut(l, o.value.timezone) : l, w = (l) => {
    if (o.value.timezone && o.value.convertModel) {
      const S = pl(o.value.timezone);
      return Hn(l, S);
    }
    return l;
  }, Y = (l, S, j = !1) => Mn(
    l,
    t.format,
    t.formatLocale,
    a.value.rangeSeparator,
    t.modelAuto,
    S ?? C(),
    j
  ), E = (l) => l ? t.modelType ? q(l) : {
    hours: Ze(l),
    minutes: lt(l),
    seconds: t.enableSeconds ? Ct(l) : 0
  } : null, M = (l) => t.modelType ? q(l) : { month: be(l), year: ge(l) }, F = (l) => Array.isArray(l) ? s.value.enabled ? l.map((S) => T(S, at(W(), S))) : qt(
    () => [
      at(W(), l[0]),
      l[1] ? at(W(), l[1]) : St(f.value.partialRange)
    ],
    f.value.enabled
  ) : at(W(), +l), T = (l, S) => (typeof l == "string" || typeof l == "number") && t.modelType ? v(l) : S, H = (l) => Array.isArray(l) ? [
    T(
      l[0],
      mt(null, +l[0].hours, +l[0].minutes, l[0].seconds)
    ),
    T(
      l[1],
      mt(null, +l[1].hours, +l[1].minutes, l[1].seconds)
    )
  ] : T(l, mt(null, l.hours, l.minutes, l.seconds)), B = (l) => {
    const S = Ae(W(), { date: 1 });
    return Array.isArray(l) ? s.value.enabled ? l.map((j) => T(j, st(S, +j.month, +j.year))) : qt(
      () => [
        T(l[0], st(S, +l[0].month, +l[0].year)),
        T(
          l[1],
          l[1] ? st(S, +l[1].month, +l[1].year) : St(f.value.partialRange)
        )
      ],
      f.value.enabled
    ) : T(l, st(S, +l.month, +l.year));
  }, P = (l) => {
    if (Array.isArray(l))
      return l.map((S) => v(S));
    throw new Error(Fa.dateArr("multi-dates"));
  }, I = (l) => {
    if (Array.isArray(l) && f.value.enabled) {
      const S = l[0], j = l[1];
      return [
        W(Array.isArray(S) ? S[0] : null),
        W(Array.isArray(j) ? j[0] : null)
      ];
    }
    return W(l[0]);
  }, L = (l) => t.modelAuto ? Array.isArray(l) ? [v(l[0]), v(l[1])] : t.autoApply ? [v(l)] : [v(l), null] : Array.isArray(l) ? qt(
    () => l[1] ? [
      v(l[0]),
      l[1] ? v(l[1]) : St(f.value.partialRange)
    ] : [v(l[0])],
    f.value.enabled
  ) : v(l), J = () => {
    Array.isArray(n.value) && f.value.enabled && n.value.length === 1 && n.value.push(St(f.value.partialRange));
  }, $ = () => {
    const l = n.value;
    return [
      q(l[0]),
      l[1] ? q(l[1]) : St(f.value.partialRange)
    ];
  }, se = () => n.value[1] ? $() : q(Oe(n.value[0])), le = () => (n.value || []).map((l) => q(l)), ae = () => (J(), t.modelAuto ? se() : s.value.enabled ? le() : Array.isArray(n.value) ? qt(() => $(), f.value.enabled) : q(Oe(n.value))), _ = (l) => !l || Array.isArray(l) && !l.length ? null : t.timePicker ? H(Oe(l)) : t.monthPicker ? B(Oe(l)) : t.yearPicker ? F(Oe(l)) : s.value.enabled ? P(Oe(l)) : t.weekPicker ? I(Oe(l)) : L(Oe(l)), z = (l) => {
    const S = _(l);
    Ra(Oe(S)) ? (n.value = Oe(S), h()) : (n.value = null, A.value = "");
  }, ee = () => {
    const l = (S) => nt(S, a.value.format);
    return `${l(n.value[0])} ${a.value.rangeSeparator} ${n.value[1] ? l(n.value[1]) : ""}`;
  }, V = () => r.value && n.value ? Array.isArray(n.value) ? ee() : nt(n.value, a.value.format) : Y(n.value), c = () => n.value ? s.value.enabled ? n.value.map((l) => Y(l)).join("; ") : a.value.enabled && typeof a.value.format == "string" ? V() : Y(n.value) : "", h = () => {
    !t.format || typeof t.format == "string" || a.value.enabled && typeof a.value.format == "string" ? A.value = c() : A.value = t.format(n.value);
  }, v = (l) => {
    if (t.utc) {
      const S = new Date(l);
      return t.utc === "preserve" ? new Date(S.getTime() + S.getTimezoneOffset() * 6e4) : S;
    }
    return t.modelType ? t.modelType === "date" || t.modelType === "timestamp" ? R(new Date(l)) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? R(Sa(l, C(), /* @__PURE__ */ new Date())) : R(Sa(l, t.modelType, /* @__PURE__ */ new Date())) : R(new Date(l));
  }, q = (l) => l ? t.utc ? ul(l, t.utc === "preserve", t.enableSeconds) : t.modelType ? t.modelType === "timestamp" ? +w(l) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? Y(w(l)) : Y(w(l), t.modelType, !0) : w(l) : "", N = (l, S = !1) => {
    if (e("update:model-value", l), o.value.emitTimezone && S) {
      const j = Array.isArray(l) ? l.map((d) => ut(Oe(d), o.value.emitTimezone)) : ut(Oe(l), o.value.emitTimezone);
      e("update:model-timezone-value", j);
    }
  }, m = (l) => Array.isArray(n.value) ? s.value.enabled ? n.value.map((S) => l(S)) : [
    l(n.value[0]),
    n.value[1] ? l(n.value[1]) : St(f.value.partialRange)
  ] : l(Oe(n.value)), K = () => {
    if (Array.isArray(n.value)) {
      const l = ot(n.value[0], t.weekStart), S = n.value[1] ? ot(n.value[1], t.weekStart) : [];
      return [l.map((j) => W(j)), S.map((j) => W(j))];
    }
    return ot(n.value, t.weekStart).map((l) => W(l));
  }, te = (l) => N(Oe(m(l)));
  return {
    inputValue: A,
    internalModelValue: n,
    checkBeforeEmit: () => n.value ? f.value.enabled ? f.value.partialRange ? n.value.length >= 1 : n.value.length === 2 : !!n.value : !1,
    parseExternalModelValue: z,
    formatInputValue: h,
    emitModelValue: () => (h(), t.monthPicker ? te(M) : t.timePicker ? te(E) : t.yearPicker ? te(ge) : t.weekPicker ? e("update:model-value", K()) : N(ae(), !0))
  };
}, Bl = (e, t) => {
  const { defaultedFilters: r, propDates: n } = Re(e), { validateMonthYearInRange: a } = yt(e), f = (y, R) => {
    let w = y;
    return r.value.months.includes(be(w)) ? (w = R ? Dt(y, 1) : Vt(y, 1), f(w, R)) : w;
  }, o = (y, R) => {
    let w = y;
    return r.value.years.includes(ge(w)) ? (w = R ? un(y, 1) : dn(y, 1), o(w, R)) : w;
  }, s = (y, R = !1) => {
    const w = Ae(W(), { month: e.month, year: e.year });
    let Y = y ? Dt(w, 1) : Vt(w, 1);
    e.disableYearSelect && (Y = at(Y, e.year));
    let E = be(Y), M = ge(Y);
    r.value.months.includes(E) && (Y = f(Y, y), E = be(Y), M = ge(Y)), r.value.years.includes(M) && (Y = o(Y, y), M = ge(Y)), a(E, M, y, e.preventMinMaxNavigation) && C(E, M, R);
  }, C = (y, R, w) => {
    t("update-month-year", { month: y, year: R, fromNav: w });
  }, A = Q(() => (y) => wn(
    Ae(W(), { month: e.month, year: e.year }),
    n.value.maxDate,
    n.value.minDate,
    e.preventMinMaxNavigation,
    y
  ));
  return { handleMonthYearChange: s, isDisabled: A, updateMonthYear: C };
};
var Rt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Rt || {}), qe = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e))(qe || {}), wt = /* @__PURE__ */ ((e) => (e.top = "top", e.bottom = "bottom", e))(wt || {}), At = /* @__PURE__ */ ((e) => (e.header = "header", e.calendar = "calendar", e.timePicker = "timePicker", e))(At || {}), tt = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e.calendar = "calendar", e.time = "time", e.minutes = "minutes", e.hours = "hours", e.seconds = "seconds", e))(tt || {});
const Yl = ({
  menuRef: e,
  menuRefInner: t,
  inputRef: r,
  pickerWrapperRef: n,
  inline: a,
  emit: f,
  props: o,
  slots: s
}) => {
  const C = x({}), A = x(!1), y = x({
    top: "0",
    left: "0"
  }), R = x(!1), w = ea(o, "teleportCenter");
  pt(w, () => {
    y.value = JSON.parse(JSON.stringify({})), P();
  });
  const Y = (c) => {
    if (o.teleport) {
      const h = c.getBoundingClientRect();
      return {
        left: h.left + window.scrollX,
        top: h.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, E = (c, h) => {
    y.value.left = `${c + h - C.value.width}px`;
  }, M = (c) => {
    y.value.left = `${c}px`;
  }, F = (c, h) => {
    o.position === Rt.left && M(c), o.position === Rt.right && E(c, h), o.position === Rt.center && (y.value.left = `${c + h / 2 - C.value.width / 2}px`);
  }, T = (c) => {
    const { width: h, height: v } = c.getBoundingClientRect(), { top: q, left: N } = o.altPosition ? o.altPosition(c) : Y(c);
    return { top: +q, left: +N, width: h, height: v };
  }, H = () => {
    y.value.left = "50%", y.value.top = "50%", y.value.transform = "translate(-50%, -50%)", y.value.position = "fixed", delete y.value.opacity;
  }, B = () => {
    const c = Ie(r), { top: h, left: v, transform: q } = o.altPosition(c);
    y.value = { top: `${h}px`, left: `${v}px`, transform: q ?? "" };
  }, P = (c = !0) => {
    var h;
    if (!a.value.enabled) {
      if (w.value)
        return H();
      if (o.altPosition !== null)
        return B();
      if (c) {
        const v = o.teleport ? (h = t.value) == null ? void 0 : h.$el : e.value;
        v && (C.value = v.getBoundingClientRect()), f("recalculate-position");
      }
      return ae();
    }
  }, I = ({ inputEl: c, left: h, width: v }) => {
    window.screen.width > 768 && !A.value && F(h, v), $(c);
  }, L = (c) => {
    const { top: h, left: v, height: q, width: N } = T(c);
    y.value.top = `${q + h + +o.offset}px`, R.value = !1, A.value || (y.value.left = `${v + N / 2 - C.value.width / 2}px`), I({ inputEl: c, left: v, width: N });
  }, J = (c) => {
    const { top: h, left: v, width: q } = T(c);
    y.value.top = `${h - +o.offset - C.value.height}px`, R.value = !0, I({ inputEl: c, left: v, width: q });
  }, $ = (c) => {
    if (o.autoPosition) {
      const { left: h, width: v } = T(c), { left: q, right: N } = C.value;
      if (!A.value) {
        if (Math.abs(q) !== Math.abs(N)) {
          if (q <= 0)
            return A.value = !0, M(h);
          if (N >= document.documentElement.clientWidth)
            return A.value = !0, E(h, v);
        }
        return F(h, v);
      }
    }
  }, se = () => {
    const c = Ie(r);
    if (c) {
      const { height: h } = C.value, { top: v, height: q } = c.getBoundingClientRect(), m = window.innerHeight - v - q, K = v;
      return h <= m ? wt.bottom : h > m && h <= K ? wt.top : m >= K ? wt.bottom : wt.top;
    }
    return wt.bottom;
  }, le = (c) => se() === wt.bottom ? L(c) : J(c), ae = () => {
    const c = Ie(r);
    if (c)
      return o.autoPosition ? le(c) : L(c);
  }, _ = function(c) {
    if (c) {
      const h = c.scrollHeight > c.clientHeight, q = window.getComputedStyle(c).overflowY.indexOf("hidden") !== -1;
      return h && !q;
    }
    return !0;
  }, z = function(c) {
    return !c || c === document.body || c.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : _(c) ? c : z(c.parentNode);
  }, ee = (c) => {
    if (c)
      switch (o.position) {
        case Rt.left:
          return { left: 0, transform: "translateX(0)" };
        case Rt.right:
          return { left: `${c.width}px`, transform: "translateX(-100%)" };
        default:
          return { left: `${c.width / 2}px`, transform: "translateX(-50%)" };
      }
    return {};
  };
  return {
    openOnTop: R,
    menuStyle: y,
    xCorrect: A,
    setMenuPosition: P,
    getScrollableParent: z,
    shadowRender: (c, h) => {
      var te, i, b;
      const v = document.createElement("div"), q = (te = Ie(r)) == null ? void 0 : te.getBoundingClientRect();
      v.setAttribute("id", "dp--temp-container");
      const N = (i = n.value) != null && i.clientWidth ? n.value : document.body;
      N.append(v);
      const m = ee(q), K = Yn(
        c,
        {
          ...h,
          shadow: !0,
          style: { opacity: 0, position: "absolute", ...m }
        },
        Object.fromEntries(
          Object.keys(s).filter((l) => ["right-sidebar", "left-sidebar"].includes(l)).map((l) => [l, s[l]])
        )
      );
      Ua(K, v), C.value = (b = K.el) == null ? void 0 : b.getBoundingClientRect(), Ua(null, v), N.removeChild(v);
    }
  };
}, ct = [
  { name: "clock-icon", use: ["time", "calendar", "shared"] },
  { name: "arrow-left", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-right", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-up", use: ["time", "calendar", "month-year", "shared"] },
  { name: "arrow-down", use: ["time", "calendar", "month-year", "shared"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar", "shared", "year-mode"] },
  { name: "day", use: ["calendar", "shared"] },
  { name: "month-overlay-value", use: ["calendar", "month-year", "shared"] },
  { name: "year-overlay-value", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "year-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay-header", use: ["month-year", "shared"] },
  { name: "year-overlay-header", use: ["month-year", "shared"] },
  { name: "hours-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "minutes-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "seconds-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "hours", use: ["calendar", "time", "shared"] },
  { name: "minutes", use: ["calendar", "time", "shared"] },
  { name: "month", use: ["calendar", "month-year", "shared"] },
  { name: "year", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "action-buttons", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar", "shared"] },
  { name: "marker-tooltip", use: ["calendar", "shared"] },
  { name: "action-extra", use: ["menu"] },
  { name: "time-picker-overlay", use: ["calendar", "time", "shared"] },
  { name: "am-pm-button", use: ["calendar", "time", "shared"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year", "shared"] },
  { name: "time-picker", use: ["menu", "shared"] },
  { name: "action-row", use: ["action"] },
  { name: "marker", use: ["calendar", "shared"] },
  { name: "quarter", use: ["shared"] }
], Il = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], Nl = {
  all: () => ct,
  monthYear: () => ct.filter((e) => e.use.includes("month-year")),
  input: () => Il,
  timePicker: () => ct.filter((e) => e.use.includes("time")),
  action: () => ct.filter((e) => e.use.includes("action")),
  calendar: () => ct.filter((e) => e.use.includes("calendar")),
  menu: () => ct.filter((e) => e.use.includes("menu")),
  shared: () => ct.filter((e) => e.use.includes("shared")),
  yearMode: () => ct.filter((e) => e.use.includes("year-mode"))
}, Ke = (e, t, r) => {
  const n = [];
  return Nl[t]().forEach((a) => {
    e[a.name] && n.push(a.name);
  }), r != null && r.length && r.forEach((a) => {
    a.slot && n.push(a.slot);
  }), n;
}, Ut = (e) => {
  const t = Q(() => (n) => e.value ? n ? e.value.open : e.value.close : ""), r = Q(() => (n) => e.value ? n ? e.value.menuAppearTop : e.value.menuAppearBottom : "");
  return { transitionName: t, showTransition: !!e.value, menuTransition: r };
}, Kt = (e, t) => {
  const { defaultedRange: r, defaultedTz: n } = Re(e), a = W(ut(W(), n.value.timezone)), f = x([{ month: be(a), year: ge(a) }]), o = zt({
    hours: r.value.enabled ? [Ze(a), Ze(a)] : Ze(a),
    minutes: r.value.enabled ? [lt(a), lt(a)] : lt(a),
    seconds: r.value.enabled ? [0, 0] : 0
  }), s = Q({
    get: () => e.internalModelValue,
    set: (y) => {
      !e.readonly && !e.disabled && t("update:internal-model-value", y);
    }
  }), C = Q(
    () => (y) => f.value[y] ? f.value[y].month : 0
  ), A = Q(
    () => (y) => f.value[y] ? f.value[y].year : 0
  );
  return {
    calendars: f,
    time: o,
    modelValue: s,
    month: C,
    year: A
  };
}, El = (e, t) => {
  const { defaultedMultiCalendars: r, defaultedMultiDates: n, defaultedHighlight: a, defaultedTz: f, propDates: o, defaultedRange: s } = Re(t), { isDisabled: C } = yt(t), A = x(null), y = x(ut(/* @__PURE__ */ new Date(), f.value.timezone)), R = (i) => {
    !i.current && t.hideOffsetDates || (A.value = i.value);
  }, w = () => {
    A.value = null;
  }, Y = (i) => Array.isArray(e.value) && s.value.enabled && e.value[0] && A.value ? i ? _e(A.value, e.value[0]) : Pe(A.value, e.value[0]) : !0, E = (i, b) => {
    const l = () => e.value ? b ? e.value[0] || null : e.value[1] : null, S = e.value && Array.isArray(e.value) ? l() : null;
    return we(W(i.value), S);
  }, M = (i) => {
    const b = Array.isArray(e.value) ? e.value[0] : null;
    return i ? !Pe(A.value ?? null, b) : !0;
  }, F = (i, b = !0) => (s.value.enabled || t.weekPicker) && Array.isArray(e.value) && e.value.length === 2 ? t.hideOffsetDates && !i.current ? !1 : we(W(i.value), e.value[b ? 0 : 1]) : s.value.enabled ? E(i, b) && M(b) || we(i.value, Array.isArray(e.value) ? e.value[0] : null) && Y(b) : !1, T = (i, b, l) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? i ? !1 : l ? _e(e.value[0], b.value) : Pe(e.value[0], b.value) : !1, H = (i) => !e.value || t.hideOffsetDates && !i.current ? !1 : s.value.enabled ? t.modelAuto && Array.isArray(e.value) ? we(i.value, e.value[0] ? e.value[0] : y.value) : !1 : n.value.enabled && Array.isArray(e.value) ? e.value.some((b) => we(b, i.value)) : we(i.value, e.value ? e.value : y.value), B = (i) => {
    if (s.value.autoRange || t.weekPicker) {
      if (A.value) {
        if (t.hideOffsetDates && !i.current)
          return !1;
        const b = Mt(A.value, +s.value.autoRange), l = ot(W(A.value), t.weekStart);
        return t.weekPicker ? we(l[1], W(i.value)) : we(b, W(i.value));
      }
      return !1;
    }
    return !1;
  }, P = (i) => {
    if (s.value.autoRange || t.weekPicker) {
      if (A.value) {
        const b = Mt(A.value, +s.value.autoRange);
        if (t.hideOffsetDates && !i.current)
          return !1;
        const l = ot(W(A.value), t.weekStart);
        return t.weekPicker ? _e(i.value, l[0]) && Pe(i.value, l[1]) : _e(i.value, A.value) && Pe(i.value, b);
      }
      return !1;
    }
    return !1;
  }, I = (i) => {
    if (s.value.autoRange || t.weekPicker) {
      if (A.value) {
        if (t.hideOffsetDates && !i.current)
          return !1;
        const b = ot(W(A.value), t.weekStart);
        return t.weekPicker ? we(b[0], i.value) : we(A.value, i.value);
      }
      return !1;
    }
    return !1;
  }, L = (i) => la(e.value, A.value, i.value), J = () => t.modelAuto && Array.isArray(t.internalModelValue) ? !!t.internalModelValue[0] : !1, $ = () => t.modelAuto ? mn(t.internalModelValue) : !0, se = (i) => {
    if (t.weekPicker)
      return !1;
    const b = s.value.enabled ? !F(i) && !F(i, !1) : !0;
    return !C(i.value) && !H(i) && !(!i.current && t.hideOffsetDates) && b;
  }, le = (i) => s.value.enabled ? t.modelAuto ? J() && H(i) : !1 : H(i), ae = (i) => a.value ? ol(i.value, o.value.highlight) : !1, _ = (i) => {
    const b = C(i.value);
    return b && (typeof a.value == "function" ? !a.value(i.value, b) : !a.value.options.highlightDisabled);
  }, z = (i) => {
    var b;
    return typeof a.value == "function" ? a.value(i.value) : (b = a.value.weekdays) == null ? void 0 : b.includes(i.value.getDay());
  }, ee = (i) => (s.value.enabled || t.weekPicker) && (!(r.value.count > 0) || i.current) && $() && !(!i.current && t.hideOffsetDates) && !H(i) ? L(i) : !1, V = (i) => {
    const { isRangeStart: b, isRangeEnd: l } = q(i), S = s.value.enabled ? b || l : !1;
    return {
      dp__cell_offset: !i.current,
      dp__pointer: !t.disabled && !(!i.current && t.hideOffsetDates) && !C(i.value),
      dp__cell_disabled: C(i.value),
      dp__cell_highlight: !_(i) && (ae(i) || z(i)) && !le(i) && !S && !I(i) && !(ee(i) && t.weekPicker) && !l,
      dp__cell_highlight_active: !_(i) && (ae(i) || z(i)) && le(i),
      dp__today: !t.noToday && we(i.value, y.value) && i.current,
      "dp--past": Pe(i.value, y.value),
      "dp--future": _e(i.value, y.value)
    };
  }, c = (i) => ({
    dp__active_date: le(i),
    dp__date_hover: se(i)
  }), h = (i) => {
    if (e.value && !Array.isArray(e.value)) {
      const b = ot(e.value, t.weekStart);
      return {
        ...m(i),
        dp__range_start: we(b[0], i.value),
        dp__range_end: we(b[1], i.value),
        dp__range_between_week: _e(i.value, b[0]) && Pe(i.value, b[1])
      };
    }
    return {
      ...m(i)
    };
  }, v = (i) => {
    if (e.value && Array.isArray(e.value)) {
      const b = ot(e.value[0], t.weekStart), l = e.value[1] ? ot(e.value[1], t.weekStart) : [];
      return {
        ...m(i),
        dp__range_start: we(b[0], i.value) || we(l[0], i.value),
        dp__range_end: we(b[1], i.value) || we(l[1], i.value),
        dp__range_between_week: _e(i.value, b[0]) && Pe(i.value, b[1]) || _e(i.value, l[0]) && Pe(i.value, l[1]),
        dp__range_between: _e(i.value, b[1]) && Pe(i.value, l[0])
      };
    }
    return {
      ...m(i)
    };
  }, q = (i) => {
    const b = r.value.count > 0 ? i.current && F(i) && $() : F(i) && $(), l = r.value.count > 0 ? i.current && F(i, !1) && $() : F(i, !1) && $();
    return { isRangeStart: b, isRangeEnd: l };
  }, N = (i) => {
    const { isRangeStart: b, isRangeEnd: l } = q(i);
    return {
      dp__range_start: b,
      dp__range_end: l,
      dp__range_between: ee(i),
      dp__date_hover: se(i),
      dp__date_hover_start: T(se(i), i, !0),
      dp__date_hover_end: T(se(i), i, !1)
    };
  }, m = (i) => ({
    ...N(i),
    dp__cell_auto_range: P(i),
    dp__cell_auto_range_start: I(i),
    dp__cell_auto_range_end: B(i)
  }), K = (i) => s.value.enabled ? s.value.autoRange ? m(i) : t.modelAuto ? { ...c(i), ...N(i) } : t.weekPicker ? v(i) : N(i) : t.weekPicker ? h(i) : c(i);
  return {
    setHoverDate: R,
    clearHoverDate: w,
    getDayClassData: (i) => t.hideOffsetDates && !i.current ? {} : {
      ...V(i),
      ...K(i),
      [t.dayClass ? t.dayClass(i.value) : ""]: !0,
      [t.calendarCellClassName]: !!t.calendarCellClassName
    }
  };
}, yt = (e) => {
  const { defaultedFilters: t, defaultedRange: r, propDates: n, defaultedMultiDates: a } = Re(e), f = (_) => n.value.disabledDates ? typeof n.value.disabledDates == "function" ? n.value.disabledDates(W(_)) : !!ta(_, n.value.disabledDates) : !1, o = (_) => {
    const z = n.value.maxDate ? _e(_, n.value.maxDate) : !1, ee = n.value.minDate ? Pe(_, n.value.minDate) : !1, V = f(_), h = t.value.months.map((K) => +K).includes(be(_)), v = e.disabledWeekDays.length ? e.disabledWeekDays.some((K) => +K === zn(_)) : !1, q = R(_), N = ge(_), m = N < +e.yearRange[0] || N > +e.yearRange[1];
    return !(z || ee || V || h || m || v || q);
  }, s = (_, z) => Pe(...ft(n.value.minDate, _, z)) || we(...ft(n.value.minDate, _, z)), C = (_, z) => _e(...ft(n.value.maxDate, _, z)) || we(...ft(n.value.maxDate, _, z)), A = (_, z, ee) => {
    let V = !1;
    return n.value.maxDate && ee && C(_, z) && (V = !0), n.value.minDate && !ee && s(_, z) && (V = !0), V;
  }, y = (_, z, ee, V) => {
    let c = !1;
    return V ? n.value.minDate && n.value.maxDate ? c = A(_, z, ee) : (n.value.minDate && s(_, z) || n.value.maxDate && C(_, z)) && (c = !0) : c = !0, c;
  }, R = (_) => Array.isArray(n.value.allowedDates) && !n.value.allowedDates.length ? !0 : n.value.allowedDates ? !ta(_, n.value.allowedDates) : !1, w = (_) => !o(_), Y = (_) => r.value.noDisabledRange ? !on({ start: _[0], end: _[1] }).some((ee) => w(ee)) : !0, E = (_) => {
    if (_) {
      const z = ge(_);
      return z >= +e.yearRange[0] && z <= e.yearRange[1];
    }
    return !0;
  }, M = (_, z) => !!(Array.isArray(_) && _[z] && (r.value.maxRange || r.value.minRange) && E(_[z])), F = (_, z, ee = 0) => {
    if (M(z, ee) && E(_)) {
      const V = Un(_, z[ee]), c = bn(z[ee], _), h = c.length === 1 ? 0 : c.filter((q) => w(q)).length, v = Math.abs(V) - (r.value.minMaxRawRange ? 0 : h);
      if (r.value.minRange && r.value.maxRange)
        return v >= +r.value.minRange && v <= +r.value.maxRange;
      if (r.value.minRange)
        return v >= +r.value.minRange;
      if (r.value.maxRange)
        return v <= +r.value.maxRange;
    }
    return !0;
  }, T = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, H = (_) => Array.isArray(_) ? [_[0] ? ka(_[0]) : null, _[1] ? ka(_[1]) : null] : ka(_), B = (_, z, ee) => _.find(
    (V) => +V.hours === Ze(z) && V.minutes === "*" ? !0 : +V.minutes === lt(z) && +V.hours === Ze(z)
  ) && ee, P = (_, z, ee) => {
    const [V, c] = _, [h, v] = z;
    return !B(V, h, ee) && !B(c, v, ee) && ee;
  }, I = (_, z) => {
    const ee = Array.isArray(z) ? z : [z];
    return Array.isArray(e.disabledTimes) ? Array.isArray(e.disabledTimes[0]) ? P(e.disabledTimes, ee, _) : !ee.some((V) => B(e.disabledTimes, V, _)) : _;
  }, L = (_, z) => {
    const ee = Array.isArray(z) ? [$t(z[0]), z[1] ? $t(z[1]) : void 0] : $t(z), V = !e.disabledTimes(ee);
    return _ && V;
  }, J = (_, z) => e.disabledTimes ? Array.isArray(e.disabledTimes) ? I(z, _) : L(z, _) : z, $ = (_) => {
    let z = !0;
    if (!_ || T())
      return !0;
    const ee = !n.value.minDate && !n.value.maxDate ? H(_) : _;
    return (e.maxTime || n.value.maxDate) && (z = xa(
      e.maxTime,
      n.value.maxDate,
      "max",
      Oe(ee),
      z
    )), (e.minTime || n.value.minDate) && (z = xa(
      e.minTime,
      n.value.minDate,
      "min",
      Oe(ee),
      z
    )), J(_, z);
  }, se = (_) => {
    if (!e.monthPicker)
      return !0;
    let z = !0;
    const ee = W(Xe(_));
    if (n.value.minDate && n.value.maxDate) {
      const V = W(Xe(n.value.minDate)), c = W(Xe(n.value.maxDate));
      return _e(ee, V) && Pe(ee, c) || we(ee, V) || we(ee, c);
    }
    if (n.value.minDate) {
      const V = W(Xe(n.value.minDate));
      z = _e(ee, V) || we(ee, V);
    }
    if (n.value.maxDate) {
      const V = W(Xe(n.value.maxDate));
      z = Pe(ee, V) || we(ee, V);
    }
    return z;
  }, le = Q(() => (_) => !e.enableTimePicker || e.ignoreTimeValidation ? !0 : $(_)), ae = Q(() => (_) => e.monthPicker ? Array.isArray(_) && (r.value.enabled || a.value.enabled) ? !_.filter((ee) => !se(ee)).length : se(_) : !0);
  return {
    isDisabled: w,
    validateDate: o,
    validateMonthYearInRange: y,
    isDateRangeAllowed: Y,
    checkMinMaxRange: F,
    isValidTime: $,
    isTimeValid: le,
    isMonthValid: ae
  };
}, ra = () => {
  const e = Q(() => (n, a) => n == null ? void 0 : n.includes(a)), t = Q(() => (n, a) => n.count ? n.solo ? !0 : a === 0 : !0), r = Q(() => (n, a) => n.count ? n.solo ? !0 : a === n.count - 1 : !0);
  return { hideNavigationButtons: e, showLeftIcon: t, showRightIcon: r };
}, Fl = (e, t, r) => {
  const n = x(0), a = zt({
    [At.timePicker]: !e.enableTimePicker || e.timePicker || e.monthPicker,
    [At.calendar]: !1,
    [At.header]: !1
  }), f = Q(() => e.monthPicker), o = (R) => {
    var w;
    if ((w = e.flow) != null && w.length) {
      if (!R && f.value)
        return y();
      a[R] = !0, Object.keys(a).filter((Y) => !a[Y]).length || y();
    }
  }, s = () => {
    var R;
    (R = e.flow) != null && R.length && n.value !== -1 && (n.value += 1, t("flow-step", n.value), y());
  }, C = () => {
    n.value = -1;
  }, A = (R, w, ...Y) => {
    var E, M;
    e.flow[n.value] === R && r.value && ((M = (E = r.value)[w]) == null || M.call(E, ...Y));
  }, y = () => {
    A(tt.month, "toggleMonthPicker", !0), A(tt.year, "toggleYearPicker", !0), A(tt.calendar, "toggleTimePicker", !1, !0), A(tt.time, "toggleTimePicker", !0, !0);
    const R = e.flow[n.value];
    (R === tt.hours || R === tt.minutes || R === tt.seconds) && A(R, "toggleTimePicker", !0, !0, R);
  };
  return { childMount: o, updateFlowStep: s, resetFlow: C, flowStep: n };
}, oa = {
  multiCalendars: { type: [Boolean, Number, String, Object], default: void 0 },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  autoPosition: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: [String, Object], default: null },
  emitTimezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  disableYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: null },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetDates: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Function, Object],
    default: null
  },
  teleport: { type: [String, Boolean, Object], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function, Object],
    default: null
  },
  calendarClassName: { type: String, default: null },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: [Object, Boolean], default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: [Boolean, Object], default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: [Boolean, Object], default: !1 },
  textInput: { type: [Boolean, Object], default: !1 },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: [Boolean, String], default: !1 },
  actionRow: { type: Object, default: () => ({}) },
  focusStartDate: { type: Boolean, default: !1 },
  disabledTimes: { type: [Function, Array], default: void 0 },
  showLastInRange: { type: Boolean, default: !0 },
  timePickerInline: { type: Boolean, default: !1 },
  calendar: { type: Function, default: null },
  config: { type: Object, default: void 0 },
  quarterPicker: { type: Boolean, default: !1 },
  yearFirst: { type: Boolean, default: !1 },
  loading: { type: Boolean, default: !1 }
}, xe = {
  ...oa,
  shadow: { type: Boolean, default: !1 },
  flowStep: { type: Number, default: 0 },
  internalModelValue: { type: [Date, Array], default: null },
  noOverlayFocus: { type: Boolean, default: !1 },
  collapse: { type: Boolean, default: !1 },
  menuWrapRef: { type: Object, default: null }
}, Ll = {
  key: 1,
  class: "dp__input_wrap"
}, Vl = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "aria-label", "aria-disabled", "aria-invalid"], Wl = {
  key: 2,
  class: "dp__clear_icon"
}, Hl = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...oa
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur",
    "real-blur"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, {
      defaultedTextInput: f,
      defaultedAriaLabels: o,
      defaultedInline: s,
      defaultedConfig: C,
      defaultedRange: A,
      defaultedMultiDates: y,
      getDefaultPattern: R,
      getDefaultStartTime: w
    } = Re(a), { checkMinMaxRange: Y } = yt(a), E = x(), M = x(null), F = x(!1), T = x(!1), H = Q(
      () => ({
        dp__pointer: !a.disabled && !a.readonly && !f.value.enabled,
        dp__disabled: a.disabled,
        dp__input_readonly: !f.value.enabled,
        dp__input: !0,
        dp__input_icon_pad: !a.hideInputIcon,
        dp__input_valid: !!a.state,
        dp__input_invalid: a.state === !1,
        dp__input_focus: F.value || a.isMenuOpen,
        dp__input_reg: !f.value.enabled,
        [a.inputClassName]: !!a.inputClassName
      })
    ), B = () => {
      n("set-input-date", null), a.autoApply && (n("set-empty-date"), E.value = null);
    }, P = (v) => {
      const q = w();
      return sl(
        v,
        f.value.format ?? R(),
        q ?? kn({}, a.enableSeconds),
        a.inputValue,
        T.value,
        a.formatLocale
      );
    }, I = (v) => {
      const { rangeSeparator: q } = f.value, [N, m] = v.split(`${q}`);
      if (N) {
        const K = P(N.trim()), te = m ? P(m.trim()) : null, i = K && te ? [K, te] : [K];
        Y(te, i, 0) && (E.value = K ? i : null);
      }
    }, L = () => {
      T.value = !0;
    }, J = (v) => {
      if (A.value.enabled)
        I(v);
      else if (y.value.enabled) {
        const q = v.split(";");
        E.value = q.map((N) => P(N.trim())).filter((N) => N);
      } else
        E.value = P(v);
    }, $ = (v) => {
      var N;
      const q = typeof v == "string" ? v : (N = v.target) == null ? void 0 : N.value;
      q !== "" ? (f.value.openMenu && !a.isMenuOpen && n("open"), J(q), n("set-input-date", E.value)) : B(), T.value = !1, n("update:input-value", q);
    }, se = (v) => {
      f.value.enabled ? (J(v.target.value), f.value.enterSubmit && Ra(E.value) && a.inputValue !== "" ? (n("set-input-date", E.value, !0), E.value = null) : f.value.enterSubmit && a.inputValue === "" && (E.value = null, n("clear"))) : _(v);
    }, le = (v) => {
      f.value.enabled && f.value.tabSubmit && J(v.target.value), f.value.tabSubmit && Ra(E.value) && a.inputValue !== "" ? (n("set-input-date", E.value, !0, !0), E.value = null) : f.value.tabSubmit && a.inputValue === "" && (E.value = null, n("clear", !0));
    }, ae = () => {
      F.value = !0, n("focus"), it().then(() => {
        var v;
        f.value.enabled && f.value.selectOnFocus && ((v = M.value) == null || v.select());
      });
    }, _ = (v) => {
      v.preventDefault(), vt(v, C.value, !0), f.value.enabled && f.value.openMenu && !s.value.input && !a.isMenuOpen ? n("open") : f.value.enabled || n("toggle");
    }, z = () => {
      n("real-blur"), F.value = !1, (!a.isMenuOpen || s.value.enabled && s.value.input) && n("blur"), a.autoApply && f.value.enabled && E.value && !a.isMenuOpen && (n("set-input-date", E.value), n("select-date"), E.value = null);
    }, ee = (v) => {
      vt(v, C.value, !0), n("clear");
    }, V = (v) => {
      if (!f.value.enabled) {
        if (v.code === "Tab")
          return;
        v.preventDefault();
      }
    };
    return t({
      focusInput: () => {
        var v;
        (v = M.value) == null || v.focus({ preventScroll: !0 });
      },
      setParsedDate: (v) => {
        E.value = v;
      }
    }), (v, q) => {
      var N;
      return D(), G("div", { onClick: _ }, [
        v.$slots.trigger && !v.$slots["dp-input"] && !u(s).enabled ? ie(v.$slots, "trigger", { key: 0 }) : X("", !0),
        !v.$slots.trigger && (!u(s).enabled || u(s).input) ? (D(), G("div", Ll, [
          v.$slots["dp-input"] && !v.$slots.trigger && (!u(s).enabled || u(s).enabled && u(s).input) ? ie(v.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            isMenuOpen: e.isMenuOpen,
            onInput: $,
            onEnter: se,
            onTab: le,
            onClear: ee,
            onBlur: z,
            onKeypress: V,
            onPaste: L,
            openMenu: () => v.$emit("open"),
            closeMenu: () => v.$emit("close"),
            toggleMenu: () => v.$emit("toggle")
          }) : X("", !0),
          v.$slots["dp-input"] ? X("", !0) : (D(), G("input", {
            key: 1,
            id: v.uid ? `dp-input-${v.uid}` : void 0,
            ref_key: "inputRef",
            ref: M,
            name: v.name,
            class: De(H.value),
            inputmode: u(f).enabled ? "text" : "none",
            placeholder: v.placeholder,
            disabled: v.disabled,
            readonly: v.readonly,
            required: v.required,
            value: e.inputValue,
            autocomplete: v.autocomplete,
            "aria-label": (N = u(o)) == null ? void 0 : N.input,
            "aria-disabled": v.disabled || void 0,
            "aria-invalid": v.state === !1 ? !0 : void 0,
            onInput: $,
            onKeydown: [
              pe(se, ["enter"]),
              pe(le, ["tab"]),
              V
            ],
            onBlur: z,
            onFocus: ae,
            onKeypress: V,
            onPaste: L
          }, null, 42, Vl)),
          me("div", {
            onClick: q[2] || (q[2] = (m) => n("toggle"))
          }, [
            v.$slots["input-icon"] && !v.hideInputIcon ? (D(), G("span", {
              key: 0,
              class: "dp__input_icon",
              onClick: q[0] || (q[0] = (m) => n("toggle"))
            }, [
              ie(v.$slots, "input-icon")
            ])) : X("", !0),
            !v.$slots["input-icon"] && !v.hideInputIcon && !v.$slots["dp-input"] ? (D(), Me(u(Yt), {
              key: 1,
              class: "dp__input_icon dp__input_icons",
              onClick: q[1] || (q[1] = (m) => n("toggle"))
            })) : X("", !0)
          ]),
          v.$slots["clear-icon"] && e.inputValue && v.clearable && !v.disabled && !v.readonly ? (D(), G("span", Wl, [
            ie(v.$slots, "clear-icon", { clear: ee })
          ])) : X("", !0),
          v.clearable && !v.$slots["clear-icon"] && e.inputValue && !v.disabled && !v.readonly ? (D(), Me(u(fn), {
            key: 3,
            class: "dp__clear_icon dp__input_icons",
            onClick: q[3] || (q[3] = $e((m) => ee(m), ["prevent"]))
          })) : X("", !0)
        ])) : X("", !0)
      ]);
    };
  }
}), zl = ["title"], Ul = ["disabled"], Kl = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    calendarWidth: { type: Number, default: 0 },
    ...xe
  },
  emits: ["close-picker", "select-date", "select-now", "invalid-select"],
  setup(e, { emit: t }) {
    const r = t, n = e, {
      defaultedActionRow: a,
      defaultedPreviewFormat: f,
      defaultedMultiCalendars: o,
      defaultedTextInput: s,
      defaultedInline: C,
      defaultedRange: A,
      defaultedMultiDates: y,
      getDefaultPattern: R
    } = Re(n), { isTimeValid: w, isMonthValid: Y } = yt(n), { buildMatrix: E } = gt(), M = x(null), F = x(null), T = x(!1), H = x({}), B = x(null), P = x(null);
    Ue(() => {
      n.arrowNavigation && E([Ie(M), Ie(F)], "actionRow"), I(), window.addEventListener("resize", I);
    }), aa(() => {
      window.removeEventListener("resize", I);
    });
    const I = () => {
      T.value = !1, setTimeout(() => {
        var h, v;
        const V = (h = B.value) == null ? void 0 : h.getBoundingClientRect(), c = (v = P.value) == null ? void 0 : v.getBoundingClientRect();
        V && c && (H.value.maxWidth = `${c.width - V.width - 20}px`), T.value = !0;
      }, 0);
    }, L = Q(() => A.value.enabled && !A.value.partialRange && n.internalModelValue ? n.internalModelValue.length === 2 : !0), J = Q(
      () => !w.value(n.internalModelValue) || !Y.value(n.internalModelValue) || !L.value
    ), $ = () => {
      const V = f.value;
      return n.timePicker || n.monthPicker, V(Oe(n.internalModelValue));
    }, se = () => {
      const V = n.internalModelValue;
      return o.value.count > 0 ? `${le(V[0])} - ${le(V[1])}` : [le(V[0]), le(V[1])];
    }, le = (V) => Mn(
      V,
      f.value,
      n.formatLocale,
      s.value.rangeSeparator,
      n.modelAuto,
      R()
    ), ae = Q(() => !n.internalModelValue || !n.menuMount ? "" : typeof f.value == "string" ? Array.isArray(n.internalModelValue) ? n.internalModelValue.length === 2 && n.internalModelValue[1] ? se() : y.value.enabled ? n.internalModelValue.map((V) => `${le(V)}`) : n.modelAuto ? `${le(n.internalModelValue[0])}` : `${le(n.internalModelValue[0])} -` : le(n.internalModelValue) : $()), _ = () => y.value.enabled ? "; " : " - ", z = Q(
      () => Array.isArray(ae.value) ? ae.value.join(_()) : ae.value
    ), ee = () => {
      w.value(n.internalModelValue) && Y.value(n.internalModelValue) && L.value ? r("select-date") : r("invalid-select");
    };
    return (V, c) => (D(), G("div", {
      ref_key: "actionRowRef",
      ref: P,
      class: "dp__action_row"
    }, [
      V.$slots["action-row"] ? ie(V.$slots, "action-row", Be(Ne({ key: 0 }, {
        internalModelValue: V.internalModelValue,
        disabled: J.value,
        selectDate: () => V.$emit("select-date"),
        closePicker: () => V.$emit("close-picker")
      }))) : (D(), G(ke, { key: 1 }, [
        u(a).showPreview ? (D(), G("div", {
          key: 0,
          class: "dp__selection_preview",
          title: z.value,
          style: Je(H.value)
        }, [
          V.$slots["action-preview"] && T.value ? ie(V.$slots, "action-preview", {
            key: 0,
            value: V.internalModelValue
          }) : X("", !0),
          !V.$slots["action-preview"] && T.value ? (D(), G(ke, { key: 1 }, [
            dt(Ve(z.value), 1)
          ], 64)) : X("", !0)
        ], 12, zl)) : X("", !0),
        me("div", {
          ref_key: "actionBtnContainer",
          ref: B,
          class: "dp__action_buttons",
          "data-dp-element": "action-row"
        }, [
          V.$slots["action-buttons"] ? ie(V.$slots, "action-buttons", {
            key: 0,
            value: V.internalModelValue
          }) : X("", !0),
          V.$slots["action-buttons"] ? X("", !0) : (D(), G(ke, { key: 1 }, [
            !u(C).enabled && u(a).showCancel ? (D(), G("button", {
              key: 0,
              ref_key: "cancelButtonRef",
              ref: M,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: c[0] || (c[0] = (h) => V.$emit("close-picker")),
              onKeydown: [
                c[1] || (c[1] = pe((h) => V.$emit("close-picker"), ["enter"])),
                c[2] || (c[2] = pe((h) => V.$emit("close-picker"), ["space"]))
              ]
            }, Ve(V.cancelText), 545)) : X("", !0),
            u(a).showNow ? (D(), G("button", {
              key: 1,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: c[3] || (c[3] = (h) => V.$emit("select-now")),
              onKeydown: [
                c[4] || (c[4] = pe((h) => V.$emit("select-now"), ["enter"])),
                c[5] || (c[5] = pe((h) => V.$emit("select-now"), ["space"]))
              ]
            }, Ve(V.nowButtonLabel), 33)) : X("", !0),
            u(a).showSelect ? (D(), G("button", {
              key: 2,
              ref_key: "selectButtonRef",
              ref: F,
              type: "button",
              class: "dp__action_button dp__action_select",
              disabled: J.value,
              onKeydown: [
                pe(ee, ["enter"]),
                pe(ee, ["space"])
              ],
              onClick: ee
            }, Ve(V.selectText), 41, Ul)) : X("", !0)
          ], 64))
        ], 512)
      ], 64))
    ], 512));
  }
}), jl = ["onKeydown"], Gl = { class: "dp__selection_grid_header" }, Ql = ["aria-selected", "aria-disabled", "onClick", "onKeydown", "onMouseover"], ql = ["aria-label"], jt = /* @__PURE__ */ Ee({
  __name: "SelectionOverlay",
  props: {
    items: {},
    type: {},
    isLast: { type: Boolean },
    arrowNavigation: { type: Boolean },
    skipButtonRef: { type: Boolean },
    headerRefs: {},
    hideNavigation: {},
    escClose: { type: Boolean },
    useRelative: { type: Boolean },
    height: {},
    textInput: { type: [Boolean, Object] },
    config: {},
    noOverlayFocus: { type: Boolean },
    focusValue: {},
    menuWrapRef: {},
    ariaLabels: {}
  },
  emits: ["selected", "toggle", "reset-flow", "hover-value"],
  setup(e, { expose: t, emit: r }) {
    const { setSelectionGrid: n, buildMultiLevelMatrix: a, setMonthPicker: f } = gt(), o = r, s = e, { defaultedAriaLabels: C, defaultedTextInput: A, defaultedConfig: y } = Re(
      s
    ), { hideNavigationButtons: R } = ra(), w = x(!1), Y = x(null), E = x(null), M = x([]), F = x(), T = x(null), H = x(0), B = x(null);
    In(() => {
      Y.value = null;
    }), Ue(() => {
      it().then(() => ae()), s.noOverlayFocus || I(), P(!0);
    }), aa(() => P(!1));
    const P = (N) => {
      var m;
      s.arrowNavigation && ((m = s.headerRefs) != null && m.length ? f(N) : n(N));
    }, I = () => {
      var m;
      const N = Ie(E);
      N && (A.value.enabled || (Y.value ? (m = Y.value) == null || m.focus({ preventScroll: !0 }) : N.focus({ preventScroll: !0 })), w.value = N.clientHeight < N.scrollHeight);
    }, L = Q(
      () => ({
        dp__overlay: !0,
        "dp--overlay-absolute": !s.useRelative,
        "dp--overlay-relative": s.useRelative
      })
    ), J = Q(
      () => s.useRelative ? { height: `${s.height}px`, width: "260px" } : void 0
    ), $ = Q(() => ({
      dp__overlay_col: !0
    })), se = Q(
      () => ({
        dp__btn: !0,
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: w.value,
        dp__button_bottom: s.isLast
      })
    ), le = Q(() => {
      var N, m;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((N = s.items) == null ? void 0 : N.length) <= 6,
        dp__container_block: ((m = s.items) == null ? void 0 : m.length) > 6
      };
    });
    pt(
      () => s.items,
      () => ae(!1),
      { deep: !0 }
    );
    const ae = (N = !0) => {
      it().then(() => {
        const m = Ie(Y), K = Ie(E), te = Ie(T), i = Ie(B), b = te ? te.getBoundingClientRect().height : 0;
        K && (K.getBoundingClientRect().height ? H.value = K.getBoundingClientRect().height - b : H.value = y.value.modeHeight - b), m && i && N && (i.scrollTop = m.offsetTop - i.offsetTop - (H.value / 2 - m.getBoundingClientRect().height) - b);
      });
    }, _ = (N) => {
      N.disabled || o("selected", N.value);
    }, z = () => {
      o("toggle"), o("reset-flow");
    }, ee = () => {
      s.escClose && z();
    }, V = (N, m, K, te) => {
      N && ((m.active || m.value === s.focusValue) && (Y.value = N), s.arrowNavigation && (Array.isArray(M.value[K]) ? M.value[K][te] = N : M.value[K] = [N], c()));
    }, c = () => {
      var m, K;
      const N = (m = s.headerRefs) != null && m.length ? [s.headerRefs].concat(M.value) : M.value.concat([s.skipButtonRef ? [] : [T.value]]);
      a(Oe(N), (K = s.headerRefs) != null && K.length ? "monthPicker" : "selectionGrid");
    }, h = (N) => {
      s.arrowNavigation || vt(N, y.value, !0);
    }, v = (N) => {
      F.value = N, o("hover-value", N);
    }, q = () => {
      if (z(), !s.isLast) {
        const N = rl(s.menuWrapRef ?? null, "action-row");
        if (N) {
          const m = pn(N);
          m == null || m.focus();
        }
      }
    };
    return t({ focusGrid: I }), (N, m) => {
      var K;
      return D(), G("div", {
        ref_key: "gridWrapRef",
        ref: E,
        class: De(L.value),
        style: Je(J.value),
        role: "dialog",
        tabindex: "0",
        onKeydown: [
          pe($e(ee, ["prevent"]), ["esc"]),
          m[0] || (m[0] = pe($e((te) => h(te), ["prevent"]), ["left"])),
          m[1] || (m[1] = pe($e((te) => h(te), ["prevent"]), ["up"])),
          m[2] || (m[2] = pe($e((te) => h(te), ["prevent"]), ["down"])),
          m[3] || (m[3] = pe($e((te) => h(te), ["prevent"]), ["right"]))
        ]
      }, [
        me("div", {
          ref_key: "containerRef",
          ref: B,
          class: De(le.value),
          role: "grid",
          style: Je({ height: `${H.value}px` })
        }, [
          me("div", Gl, [
            ie(N.$slots, "header")
          ]),
          N.$slots.overlay ? ie(N.$slots, "overlay", { key: 0 }) : (D(!0), G(ke, { key: 1 }, Se(N.items, (te, i) => (D(), G("div", {
            key: i,
            class: De(["dp__overlay_row", { dp__flex_row: N.items.length >= 3 }]),
            role: "row"
          }, [
            (D(!0), G(ke, null, Se(te, (b, l) => (D(), G("div", {
              key: b.value,
              ref_for: !0,
              ref: (S) => V(S, b, i, l),
              role: "gridcell",
              class: De($.value),
              "aria-selected": b.active || void 0,
              "aria-disabled": b.disabled || void 0,
              tabindex: "0",
              onClick: (S) => _(b),
              onKeydown: [
                pe($e((S) => _(b), ["prevent"]), ["enter"]),
                pe($e((S) => _(b), ["prevent"]), ["space"])
              ],
              onMouseover: (S) => v(b.value)
            }, [
              me("div", {
                class: De(b.className)
              }, [
                N.$slots.item ? ie(N.$slots, "item", {
                  key: 0,
                  item: b
                }) : X("", !0),
                N.$slots.item ? X("", !0) : (D(), G(ke, { key: 1 }, [
                  dt(Ve(b.text), 1)
                ], 64))
              ], 2)
            ], 42, Ql))), 128))
          ], 2))), 128))
        ], 6),
        N.$slots["button-icon"] ? Jt((D(), G("button", {
          key: 0,
          ref_key: "toggleButton",
          ref: T,
          type: "button",
          "aria-label": (K = u(C)) == null ? void 0 : K.toggleOverlay,
          class: De(se.value),
          tabindex: "0",
          onClick: z,
          onKeydown: [
            pe(z, ["enter"]),
            pe(q, ["tab"])
          ]
        }, [
          ie(N.$slots, "button-icon")
        ], 42, ql)), [
          [Zt, !u(R)(N.hideNavigation, N.type)]
        ]) : X("", !0)
      ], 46, jl);
    };
  }
}), sa = /* @__PURE__ */ Ee({
  __name: "InstanceWrap",
  props: {
    multiCalendars: {},
    stretch: { type: Boolean },
    collapse: { type: Boolean }
  },
  setup(e) {
    const t = e, r = Q(
      () => t.multiCalendars > 0 ? [...Array(t.multiCalendars).keys()] : [0]
    ), n = Q(() => ({
      dp__instance_calendar: t.multiCalendars > 0
    }));
    return (a, f) => (D(), G("div", {
      class: De({
        dp__menu_inner: !a.stretch,
        "dp--menu--inner-stretched": a.stretch,
        dp__flex_display: a.multiCalendars > 0,
        "dp--flex-display-collapsed": a.collapse
      })
    }, [
      (D(!0), G(ke, null, Se(r.value, (o, s) => (D(), G("div", {
        key: o,
        class: De(n.value)
      }, [
        ie(a.$slots, "default", {
          instance: o,
          index: s
        })
      ], 2))), 128))
    ], 2));
  }
}), Xl = ["aria-label", "aria-disabled"], Ft = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "ArrowBtn",
  props: {
    ariaLabel: {},
    disabled: { type: Boolean }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: t }) {
    const r = t, n = x(null);
    return Ue(() => r("set-ref", n)), (a, f) => (D(), G("button", {
      ref_key: "elRef",
      ref: n,
      type: "button",
      class: "dp__btn dp--arrow-btn-nav",
      tabindex: "0",
      "aria-label": a.ariaLabel,
      "aria-disabled": a.disabled || void 0,
      onClick: f[0] || (f[0] = (o) => a.$emit("activate")),
      onKeydown: [
        f[1] || (f[1] = pe($e((o) => a.$emit("activate"), ["prevent"]), ["enter"])),
        f[2] || (f[2] = pe($e((o) => a.$emit("activate"), ["prevent"]), ["space"]))
      ]
    }, [
      me("span", {
        class: De(["dp__inner_nav", { dp__inner_nav_disabled: a.disabled }])
      }, [
        ie(a.$slots, "default")
      ], 2)
    ], 40, Xl));
  }
}), Jl = { class: "dp--year-mode-picker" }, Zl = ["aria-label"], Tn = /* @__PURE__ */ Ee({
  __name: "YearModePicker",
  props: {
    ...xe,
    showYearPicker: { type: Boolean, default: !1 },
    items: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    isDisabled: { type: Function, default: () => !1 }
  },
  emits: ["toggle-year-picker", "year-select", "handle-year"],
  setup(e, { emit: t }) {
    const r = t, n = e, { showRightIcon: a, showLeftIcon: f } = ra(), { defaultedConfig: o, defaultedMultiCalendars: s, defaultedAriaLabels: C, defaultedTransitions: A } = Re(n), { showTransition: y, transitionName: R } = Ut(A), w = (M = !1, F) => {
      r("toggle-year-picker", { flow: M, show: F });
    }, Y = (M) => {
      r("year-select", M);
    }, E = (M = !1) => {
      r("handle-year", M);
    };
    return (M, F) => {
      var T, H, B;
      return D(), G("div", Jl, [
        u(f)(u(s), e.instance) ? (D(), Me(Ft, {
          key: 0,
          ref: "mpPrevIconRef",
          "aria-label": (T = u(C)) == null ? void 0 : T.prevYear,
          disabled: e.isDisabled(!1),
          onActivate: F[0] || (F[0] = (P) => E(!1))
        }, {
          default: ye(() => [
            M.$slots["arrow-left"] ? ie(M.$slots, "arrow-left", { key: 0 }) : X("", !0),
            M.$slots["arrow-left"] ? X("", !0) : (D(), Me(u(Oa), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : X("", !0),
        me("button", {
          ref: "mpYearButtonRef",
          class: "dp__btn dp--year-select",
          type: "button",
          "aria-label": (H = u(C)) == null ? void 0 : H.openYearsOverlay,
          onClick: F[1] || (F[1] = () => w(!1)),
          onKeydown: F[2] || (F[2] = pe(() => w(!1), ["enter"]))
        }, [
          M.$slots.year ? ie(M.$slots, "year", {
            key: 0,
            year: e.year
          }) : X("", !0),
          M.$slots.year ? X("", !0) : (D(), G(ke, { key: 1 }, [
            dt(Ve(e.year), 1)
          ], 64))
        ], 40, Zl),
        u(a)(u(s), e.instance) ? (D(), Me(Ft, {
          key: 1,
          ref: "mpNextIconRef",
          "aria-label": (B = u(C)) == null ? void 0 : B.nextYear,
          disabled: e.isDisabled(!0),
          onActivate: F[3] || (F[3] = (P) => E(!0))
        }, {
          default: ye(() => [
            M.$slots["arrow-right"] ? ie(M.$slots, "arrow-right", { key: 0 }) : X("", !0),
            M.$slots["arrow-right"] ? X("", !0) : (D(), Me(u(Ba), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : X("", !0),
        Qe(Bt, {
          name: u(R)(e.showYearPicker),
          css: u(y)
        }, {
          default: ye(() => [
            e.showYearPicker ? (D(), Me(jt, {
              key: 0,
              items: e.items,
              "text-input": M.textInput,
              "esc-close": M.escClose,
              config: M.config,
              "is-last": M.autoApply && !u(o).keepActionRow,
              "hide-navigation": M.hideNavigation,
              "aria-labels": M.ariaLabels,
              type: "year",
              onToggle: w,
              onSelected: F[4] || (F[4] = (P) => Y(P))
            }, ze({
              "button-icon": ye(() => [
                M.$slots["calendar-icon"] ? ie(M.$slots, "calendar-icon", { key: 0 }) : X("", !0),
                M.$slots["calendar-icon"] ? X("", !0) : (D(), Me(u(Yt), { key: 1 }))
              ]),
              _: 2
            }, [
              M.$slots["year-overlay-value"] ? {
                name: "item",
                fn: ye(({ item: P }) => [
                  ie(M.$slots, "year-overlay-value", {
                    text: P.text,
                    value: P.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "text-input", "esc-close", "config", "is-last", "hide-navigation", "aria-labels"])) : X("", !0)
          ]),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Wa = (e, t, r) => {
  if (t.value && Array.isArray(t.value))
    if (t.value.some((n) => we(e, n))) {
      const n = t.value.filter((a) => !we(a, e));
      t.value = n.length ? n : null;
    } else
      (r && +r > t.value.length || !r) && t.value.push(e);
  else
    t.value = [e];
}, Ha = (e, t, r) => {
  let n = e.value ? e.value.slice() : [];
  return n.length === 2 && n[1] !== null && (n = []), n.length ? Pe(t, n[0]) ? (n.unshift(t), r("range-start", n[0]), r("range-start", n[1])) : (n[1] = t, r("range-end", t)) : (n = [t], r("range-start", t)), n;
}, ua = (e, t, r, n) => {
  e && (e[0] && e[1] && r && t("auto-apply"), e[0] && !e[1] && n && r && t("auto-apply"));
}, Sn = (e) => {
  Array.isArray(e.value) && e.value.length <= 2 && e.range ? e.modelValue.value = e.value.map((t) => ut(W(t), e.timezone)) : Array.isArray(e.value) || (e.modelValue.value = ut(W(e.value), e.timezone));
}, Rn = (e, t, r, n) => Array.isArray(t.value) && (t.value.length === 2 || t.value.length === 1 && n.value.partialRange) ? n.value.fixedStart && (_e(e, t.value[0]) || we(e, t.value[0])) ? [t.value[0], e] : n.value.fixedEnd && (Pe(e, t.value[1]) || we(e, t.value[1])) ? [e, t.value[1]] : (r("invalid-fixed-range", e), t.value) : [], Pn = ({
  multiCalendars: e,
  highlight: t,
  propDates: r,
  calendars: n,
  modelValue: a,
  props: f,
  filters: o,
  year: s,
  month: C,
  emit: A
}) => {
  const y = Q(() => Ea(f.yearRange, f.locale, f.reverseYears)), R = x([!1]), w = Q(() => (L, J) => {
    const $ = Ae(Xe(/* @__PURE__ */ new Date()), {
      month: C.value(L),
      year: s.value(L)
    });
    return wn(
      $,
      r.value.maxDate,
      r.value.minDate,
      f.preventMinMaxNavigation,
      J
    );
  }), Y = () => {
    for (let L = 0; L < e.value.count; L++)
      if (L === 0)
        n.value[L] = n.value[0];
      else {
        const J = Ae(W(), n.value[L - 1]);
        n.value[L] = { month: be(J), year: ge(un(J, 1)) };
      }
  }, E = (L) => {
    if (!L)
      return Y();
    const J = Ae(W(), n.value[L]);
    return n.value[0].year = ge(dn(J, e.value.count - 1)), Y();
  }, M = (L) => f.focusStartDate ? L[0] : L[1] ? L[1] : L[0], F = () => {
    if (a.value) {
      const L = Array.isArray(a.value) ? M(a.value) : a.value;
      n.value[0] = { month: be(L), year: ge(L) };
    }
  };
  Ue(() => {
    F(), e.value.count && Y();
  });
  const T = (L, J) => {
    n.value[J].year = L, e.value.count && !e.value.solo && E(J);
  }, H = Q(() => (L) => _t(y.value, (J) => {
    var ae;
    const $ = s.value(L) === J.value, se = Ht(
      J.value,
      Ot(r.value.minDate),
      Ot(r.value.maxDate)
    ) || ((ae = o.value.years) == null ? void 0 : ae.includes(s.value(L))), le = Va(t.value, J.value);
    return { active: $, disabled: se, highlighted: le };
  })), B = (L, J) => {
    T(L, J), I(J);
  }, P = (L, J = !1) => {
    if (!w.value(L, J)) {
      const $ = J ? s.value(L) + 1 : s.value(L) - 1;
      T($, L);
    }
  }, I = (L, J = !1, $) => {
    J || A("reset-flow"), $ !== void 0 ? R.value[L] = $ : R.value[L] = !R.value[L], R.value || A("overlay-closed");
  };
  return {
    isDisabled: w,
    groupedYears: H,
    showYearPicker: R,
    selectYear: T,
    toggleYearPicker: I,
    handleYearSelect: B,
    handleYear: P
  };
}, xl = (e, t) => {
  const {
    defaultedMultiCalendars: r,
    defaultedAriaLabels: n,
    defaultedTransitions: a,
    defaultedConfig: f,
    defaultedRange: o,
    defaultedHighlight: s,
    propDates: C,
    defaultedTz: A,
    defaultedFilters: y,
    defaultedMultiDates: R
  } = Re(e), { modelValue: w, year: Y, month: E, calendars: M } = Kt(e, t), F = Q(() => vn(e.formatLocale, e.locale, e.monthNameFormat)), T = x(null), { checkMinMaxRange: H } = yt(e), {
    selectYear: B,
    groupedYears: P,
    showYearPicker: I,
    toggleYearPicker: L,
    handleYearSelect: J,
    handleYear: $,
    isDisabled: se
  } = Pn({
    modelValue: w,
    multiCalendars: r,
    highlight: s,
    calendars: M,
    year: Y,
    propDates: C,
    month: E,
    filters: y,
    props: e,
    emit: t
  });
  Ue(() => {
    e.startDate && (w.value && e.focusStartDate || !w.value) && B(ge(W(e.startDate)), 0);
  });
  const le = (b) => b ? { month: be(b), year: ge(b) } : { month: null, year: null }, ae = () => w.value ? Array.isArray(w.value) ? w.value.map((b) => le(b)) : le(w.value) : le(), _ = (b, l) => {
    const S = M.value[b], j = ae();
    return Array.isArray(j) ? j.some((d) => d.year === (S == null ? void 0 : S.year) && d.month === l) : (S == null ? void 0 : S.year) === j.year && l === j.month;
  }, z = (b, l, S) => {
    var d, p;
    const j = ae();
    return Array.isArray(j) ? Y.value(l) === ((d = j[S]) == null ? void 0 : d.year) && b === ((p = j[S]) == null ? void 0 : p.month) : !1;
  }, ee = (b, l) => {
    if (o.value.enabled) {
      const S = ae();
      if (Array.isArray(w.value) && Array.isArray(S)) {
        const j = z(b, l, 0) || z(b, l, 1), d = st(Xe(W()), b, Y.value(l));
        return la(w.value, T.value, d) && !j;
      }
      return !1;
    }
    return !1;
  }, V = Q(() => (b) => _t(F.value, (l) => {
    var de;
    const S = _(b, l.value), j = Ht(
      l.value,
      yn(Y.value(b), C.value.minDate),
      hn(Y.value(b), C.value.maxDate)
    ) || vl(C.value.disabledDates, Y.value(b)).includes(l.value) || ((de = y.value.months) == null ? void 0 : de.includes(l.value)), d = ee(l.value, b), p = Dn(s.value, l.value, Y.value(b));
    return { active: S, disabled: j, isBetween: d, highlighted: p };
  })), c = (b, l) => st(Xe(W()), b, Y.value(l)), h = (b, l) => {
    const S = w.value ? w.value : Xe(/* @__PURE__ */ new Date());
    w.value = st(S, b, Y.value(l)), t("auto-apply"), t("update-flow-step");
  }, v = (b, l) => {
    const S = c(b, l);
    o.value.fixedEnd || o.value.fixedStart ? w.value = Rn(S, w, t, o) : w.value ? H(S, w.value) && (w.value = Ha(w, c(b, l), t)) : w.value = [c(b, l)], ua(w.value, t, e.autoApply, e.modelAuto);
  }, q = (b, l) => {
    Wa(c(b, l), w, R.value.limit), t("auto-apply", !0);
  }, N = (b, l) => (M.value[l].month = b, K(l, M.value[l].year, b), R.value.enabled ? q(b, l) : o.value.enabled ? v(b, l) : h(b, l)), m = (b, l) => {
    B(b, l), K(l, b, null);
  }, K = (b, l, S) => {
    let j = S;
    if (!j && j !== 0) {
      const d = ae();
      j = Array.isArray(d) ? d[b].month : d.month;
    }
    t("update-month-year", { instance: b, year: l, month: j });
  };
  return {
    groupedMonths: V,
    groupedYears: P,
    year: Y,
    isDisabled: se,
    defaultedMultiCalendars: r,
    defaultedAriaLabels: n,
    defaultedTransitions: a,
    defaultedConfig: f,
    showYearPicker: I,
    modelValue: w,
    presetDate: (b, l) => {
      Sn({
        value: b,
        modelValue: w,
        range: o.value.enabled,
        timezone: l ? void 0 : A.value.timezone
      }), t("auto-apply");
    },
    setHoverDate: (b, l) => {
      T.value = c(b, l);
    },
    selectMonth: N,
    selectYear: m,
    toggleYearPicker: L,
    handleYearSelect: J,
    handleYear: $,
    getModelMonthYear: ae
  };
}, er = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "MonthPicker",
  props: {
    ...xe
  },
  emits: [
    "update:internal-model-value",
    "overlay-closed",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year",
    "update-flow-step",
    "mount",
    "invalid-fixed-range"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = Tt(), f = Ke(a, "yearMode"), o = e;
    Ue(() => {
      o.shadow || n("mount", null);
    });
    const {
      groupedMonths: s,
      groupedYears: C,
      year: A,
      isDisabled: y,
      defaultedMultiCalendars: R,
      defaultedConfig: w,
      showYearPicker: Y,
      modelValue: E,
      presetDate: M,
      setHoverDate: F,
      selectMonth: T,
      selectYear: H,
      toggleYearPicker: B,
      handleYearSelect: P,
      handleYear: I,
      getModelMonthYear: L
    } = xl(o, n);
    return t({ getSidebarProps: () => ({
      modelValue: E,
      year: A,
      getModelMonthYear: L,
      selectMonth: T,
      selectYear: H,
      handleYear: I
    }), presetDate: M, toggleYearPicker: ($) => B(0, $) }), ($, se) => (D(), Me(sa, {
      "multi-calendars": u(R).count,
      collapse: $.collapse,
      stretch: ""
    }, {
      default: ye(({ instance: le }) => [
        $.$slots["month-year"] ? ie($.$slots, "month-year", Be(Ne({ key: 0 }, {
          year: u(A),
          months: u(s)(le),
          years: u(C)(le),
          selectMonth: u(T),
          selectYear: u(H),
          instance: le
        }))) : (D(), Me(jt, {
          key: 1,
          items: u(s)(le),
          "arrow-navigation": $.arrowNavigation,
          "is-last": $.autoApply && !u(w).keepActionRow,
          "esc-close": $.escClose,
          height: u(w).modeHeight,
          config: $.config,
          "no-overlay-focus": !!($.noOverlayFocus || $.textInput),
          "use-relative": "",
          type: "month",
          onSelected: (ae) => u(T)(ae, le),
          onHoverValue: (ae) => u(F)(ae, le)
        }, {
          header: ye(() => [
            Qe(Tn, Ne($.$props, {
              items: u(C)(le),
              instance: le,
              "show-year-picker": u(Y)[le],
              year: u(A)(le),
              "is-disabled": (ae) => u(y)(le, ae),
              onHandleYear: (ae) => u(I)(le, ae),
              onYearSelect: (ae) => u(P)(ae, le),
              onToggleYearPicker: (ae) => u(B)(le, ae == null ? void 0 : ae.flow, ae == null ? void 0 : ae.show)
            }), ze({ _: 2 }, [
              Se(u(f), (ae, _) => ({
                name: ae,
                fn: ye((z) => [
                  ie($.$slots, ae, Be(He(z)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          _: 2
        }, 1032, ["items", "arrow-navigation", "is-last", "esc-close", "height", "config", "no-overlay-focus", "onSelected", "onHoverValue"]))
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), tr = (e, t) => {
  const { modelValue: r } = Kt(e, t), n = x(null), { defaultedHighlight: a, defaultedMultiDates: f, defaultedFilters: o, defaultedRange: s, propDates: C } = Re(e), A = x();
  Ue(() => {
    e.startDate && (r.value && e.focusStartDate || !r.value) && (A.value = ge(W(e.startDate)));
  });
  const y = (F) => Array.isArray(r.value) ? r.value.some((T) => ge(T) === F) : r.value ? ge(r.value) === F : !1, R = (F) => s.value.enabled && Array.isArray(r.value) ? la(r.value, n.value, Y(F)) : !1, w = Q(() => _t(Ea(e.yearRange, e.locale, e.reverseYears), (F) => {
    const T = y(F.value), H = Ht(
      F.value,
      Ot(C.value.minDate),
      Ot(C.value.maxDate)
    ) || o.value.years.includes(F.value), B = R(F.value) && !T, P = Va(a.value, F.value);
    return { active: T, disabled: H, isBetween: B, highlighted: P };
  })), Y = (F) => at(Xe(/* @__PURE__ */ new Date()), F);
  return {
    groupedYears: w,
    modelValue: r,
    focusYear: A,
    setHoverValue: (F) => {
      n.value = at(Xe(/* @__PURE__ */ new Date()), F);
    },
    selectYear: (F) => {
      var T;
      if (t("update-month-year", { instance: 0, year: F }), f.value.enabled)
        return r.value ? Array.isArray(r.value) && (((T = r.value) == null ? void 0 : T.map((B) => ge(B))).includes(F) ? r.value = r.value.filter((B) => ge(B) !== F) : r.value.push(at(je(W()), F))) : r.value = [at(je(W()), F)], t("auto-apply", !0);
      if (s.value.enabled)
        return r.value = Ha(r, Y(F), t), ua(r.value, t, e.autoApply, e.modelAuto);
      r.value = Y(F), t("auto-apply");
    }
  };
}, ar = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "YearPicker",
  props: {
    ...xe
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { groupedYears: f, modelValue: o, focusYear: s, selectYear: C, setHoverValue: A } = tr(a, n), { defaultedConfig: y } = Re(a);
    return t({ getSidebarProps: () => ({
      modelValue: o,
      selectYear: C
    }) }), (w, Y) => (D(), G("div", null, [
      w.$slots["month-year"] ? ie(w.$slots, "month-year", Be(Ne({ key: 0 }, {
        years: u(f),
        selectYear: u(C)
      }))) : (D(), Me(jt, {
        key: 1,
        items: u(f),
        "is-last": w.autoApply && !u(y).keepActionRow,
        height: u(y).modeHeight,
        config: w.config,
        "no-overlay-focus": !!(w.noOverlayFocus || w.textInput),
        "focus-value": u(s),
        type: "year",
        "use-relative": "",
        onSelected: u(C),
        onHoverValue: u(A)
      }, ze({ _: 2 }, [
        w.$slots["year-overlay-value"] ? {
          name: "item",
          fn: ye(({ item: E }) => [
            ie(w.$slots, "year-overlay-value", {
              text: E.text,
              value: E.value
            })
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["items", "is-last", "height", "config", "no-overlay-focus", "focus-value", "onSelected", "onHoverValue"]))
    ]));
  }
}), nr = {
  key: 0,
  class: "dp__time_input"
}, lr = ["aria-label", "onKeydown", "onClick"], rr = /* @__PURE__ */ me("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), or = /* @__PURE__ */ me("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), sr = ["aria-label", "disabled", "onKeydown", "onClick"], ur = ["aria-label", "onKeydown", "onClick"], ir = /* @__PURE__ */ me("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), dr = /* @__PURE__ */ me("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), cr = { key: 0 }, fr = ["aria-label", "onKeydown"], vr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: { type: Function, default: () => !1 },
    ...xe
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { setTimePickerElements: f, setTimePickerBackRef: o } = gt(), { defaultedAriaLabels: s, defaultedTransitions: C, defaultedFilters: A, defaultedConfig: y, defaultedRange: R } = Re(a), { transitionName: w, showTransition: Y } = Ut(C), E = zt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), M = x("AM"), F = x(null), T = x([]);
    Ue(() => {
      n("mounted");
    });
    const H = (d) => Ae(/* @__PURE__ */ new Date(), {
      hours: d.hours,
      minutes: d.minutes,
      seconds: a.enableSeconds ? d.seconds : 0,
      milliseconds: 0
    }), B = Q(
      () => (d) => V(d, a[d]) || I(d, a[d])
    ), P = Q(() => ({ hours: a.hours, minutes: a.minutes, seconds: a.seconds })), I = (d, p) => R.value.enabled && !R.value.disableTimeRangeValidation ? !a.validateTime(d, p) : !1, L = (d, p) => {
      if (R.value.enabled && !R.value.disableTimeRangeValidation) {
        const de = p ? +a[`${d}Increment`] : -+a[`${d}Increment`], ne = a[d] + de;
        return !a.validateTime(d, ne);
      }
      return !1;
    }, J = Q(() => (d) => !q(+a[d] + +a[`${d}Increment`], d) || L(d, !0)), $ = Q(() => (d) => !q(+a[d] - +a[`${d}Increment`], d) || L(d, !1)), se = (d, p) => cn(Ae(W(), d), p), le = (d, p) => Kn(Ae(W(), d), p), ae = Q(
      () => ({
        dp__time_col: !0,
        dp__time_col_block: !a.timePickerInline,
        dp__time_col_reg_block: !a.enableSeconds && a.is24 && !a.timePickerInline,
        dp__time_col_reg_inline: !a.enableSeconds && a.is24 && a.timePickerInline,
        dp__time_col_reg_with_button: !a.enableSeconds && !a.is24,
        dp__time_col_sec: a.enableSeconds && a.is24,
        dp__time_col_sec_with_button: a.enableSeconds && !a.is24
      })
    ), _ = Q(() => {
      const d = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return a.enableSeconds ? d.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : d;
    }), z = Q(() => _.value.filter((d) => !d.separator)), ee = Q(() => (d) => {
      if (d === "hours") {
        const p = i(+a.hours);
        return { text: p < 10 ? `0${p}` : `${p}`, value: p };
      }
      return { text: a[d] < 10 ? `0${a[d]}` : `${a[d]}`, value: a[d] };
    }), V = (d, p) => {
      var ne;
      if (!a.disabledTimesConfig)
        return !1;
      const de = a.disabledTimesConfig(a.order, d === "hours" ? p : void 0);
      return de[d] ? !!((ne = de[d]) != null && ne.includes(p)) : !0;
    }, c = (d) => {
      const p = a.is24 ? 24 : 12, de = d === "hours" ? p : 60, ne = +a[`${d}GridIncrement`], k = d === "hours" && !a.is24 ? ne : 0, U = [];
      for (let ve = k; ve < de; ve += ne)
        U.push({ value: ve, text: ve < 10 ? `0${ve}` : `${ve}` });
      return d === "hours" && !a.is24 && U.push({ value: 0, text: "12" }), _t(U, (ve) => ({ active: !1, disabled: A.value.times[d].includes(ve.value) || !q(ve.value, d) || V(d, ve.value) || I(d, ve.value) }));
    }, h = (d) => d >= 0 ? d : 59, v = (d) => d >= 0 ? d : 23, q = (d, p) => {
      const de = a.minTime ? H(ya(a.minTime)) : null, ne = a.maxTime ? H(ya(a.maxTime)) : null, k = H(
        ya(
          P.value,
          p,
          p === "minutes" || p === "seconds" ? h(d) : v(d)
        )
      );
      return de && ne ? (Wt(k, ne) || Pt(k, ne)) && (Lt(k, de) || Pt(k, de)) : de ? Lt(k, de) || Pt(k, de) : ne ? Wt(k, ne) || Pt(k, ne) : !0;
    }, N = (d) => a[`no${d[0].toUpperCase() + d.slice(1)}Overlay`], m = (d) => {
      N(d) || (E[d] = !E[d], E[d] || n("overlay-closed"));
    }, K = (d) => d === "hours" ? Ze : d === "minutes" ? lt : Ct, te = (d, p = !0) => {
      const de = p ? se : le, ne = p ? +a[`${d}Increment`] : -+a[`${d}Increment`];
      q(+a[d] + ne, d) && n(
        `update:${d}`,
        K(d)(de({ [d]: +a[d] }, { [d]: +a[`${d}Increment`] }))
      );
    }, i = (d) => a.is24 ? d : (d >= 12 ? M.value = "PM" : M.value = "AM", el(d)), b = () => {
      M.value === "PM" ? (M.value = "AM", n("update:hours", a.hours - 12)) : (M.value = "PM", n("update:hours", a.hours + 12)), n("am-pm-change", M.value);
    }, l = (d) => {
      E[d] = !0;
    }, S = (d, p, de) => {
      if (d && a.arrowNavigation) {
        Array.isArray(T.value[p]) ? T.value[p][de] = d : T.value[p] = [d];
        const ne = T.value.reduce(
          (k, U) => U.map((ve, ue) => [...k[ue] || [], U[ue]]),
          []
        );
        o(a.closeTimePickerBtn), F.value && (ne[1] = ne[1].concat(F.value)), f(ne, a.order);
      }
    }, j = (d, p) => (m(d), d === "hours" && !a.is24 ? n(`update:${d}`, M.value === "PM" ? p + 12 : p) : n(`update:${d}`, p));
    return t({ openChildCmp: l }), (d, p) => {
      var de;
      return d.disabled ? X("", !0) : (D(), G("div", nr, [
        (D(!0), G(ke, null, Se(_.value, (ne, k) => {
          var U, ve, ue;
          return D(), G("div", {
            key: k,
            class: De(ae.value)
          }, [
            ne.separator ? (D(), G(ke, { key: 0 }, [
              dt(" : ")
            ], 64)) : (D(), G(ke, { key: 1 }, [
              me("button", {
                ref_for: !0,
                ref: (he) => S(he, k, 0),
                type: "button",
                class: De({
                  dp__btn: !0,
                  dp__inc_dec_button: !d.timePickerInline,
                  dp__inc_dec_button_inline: d.timePickerInline,
                  dp__tp_inline_btn_top: d.timePickerInline,
                  dp__inc_dec_button_disabled: J.value(ne.type)
                }),
                "aria-label": (U = u(s)) == null ? void 0 : U.incrementValue(ne.type),
                tabindex: "0",
                onKeydown: [
                  pe($e((he) => te(ne.type), ["prevent"]), ["enter"]),
                  pe($e((he) => te(ne.type), ["prevent"]), ["space"])
                ],
                onClick: (he) => te(ne.type)
              }, [
                a.timePickerInline ? (D(), G(ke, { key: 1 }, [
                  rr,
                  or
                ], 64)) : (D(), G(ke, { key: 0 }, [
                  d.$slots["arrow-up"] ? ie(d.$slots, "arrow-up", { key: 0 }) : X("", !0),
                  d.$slots["arrow-up"] ? X("", !0) : (D(), Me(u(Ia), { key: 1 }))
                ], 64))
              ], 42, lr),
              me("button", {
                ref_for: !0,
                ref: (he) => S(he, k, 1),
                type: "button",
                "aria-label": (ve = u(s)) == null ? void 0 : ve.openTpOverlay(ne.type),
                class: De({
                  dp__time_display: !0,
                  dp__time_display_block: !d.timePickerInline,
                  dp__time_display_inline: d.timePickerInline,
                  "dp--time-invalid": B.value(ne.type),
                  "dp--time-overlay-btn": !B.value(ne.type)
                }),
                disabled: N(ne.type),
                tabindex: "0",
                onKeydown: [
                  pe($e((he) => m(ne.type), ["prevent"]), ["enter"]),
                  pe($e((he) => m(ne.type), ["prevent"]), ["space"])
                ],
                onClick: (he) => m(ne.type)
              }, [
                d.$slots[ne.type] ? ie(d.$slots, ne.type, {
                  key: 0,
                  text: ee.value(ne.type).text,
                  value: ee.value(ne.type).value
                }) : X("", !0),
                d.$slots[ne.type] ? X("", !0) : (D(), G(ke, { key: 1 }, [
                  dt(Ve(ee.value(ne.type).text), 1)
                ], 64))
              ], 42, sr),
              me("button", {
                ref_for: !0,
                ref: (he) => S(he, k, 2),
                type: "button",
                class: De({
                  dp__btn: !0,
                  dp__inc_dec_button: !d.timePickerInline,
                  dp__inc_dec_button_inline: d.timePickerInline,
                  dp__tp_inline_btn_bottom: d.timePickerInline,
                  dp__inc_dec_button_disabled: $.value(ne.type)
                }),
                "aria-label": (ue = u(s)) == null ? void 0 : ue.decrementValue(ne.type),
                tabindex: "0",
                onKeydown: [
                  pe($e((he) => te(ne.type, !1), ["prevent"]), ["enter"]),
                  pe($e((he) => te(ne.type, !1), ["prevent"]), ["space"])
                ],
                onClick: (he) => te(ne.type, !1)
              }, [
                a.timePickerInline ? (D(), G(ke, { key: 1 }, [
                  ir,
                  dr
                ], 64)) : (D(), G(ke, { key: 0 }, [
                  d.$slots["arrow-down"] ? ie(d.$slots, "arrow-down", { key: 0 }) : X("", !0),
                  d.$slots["arrow-down"] ? X("", !0) : (D(), Me(u(Na), { key: 1 }))
                ], 64))
              ], 42, ur)
            ], 64))
          ], 2);
        }), 128)),
        d.is24 ? X("", !0) : (D(), G("div", cr, [
          d.$slots["am-pm-button"] ? ie(d.$slots, "am-pm-button", {
            key: 0,
            toggle: b,
            value: M.value
          }) : X("", !0),
          d.$slots["am-pm-button"] ? X("", !0) : (D(), G("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: F,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (de = u(s)) == null ? void 0 : de.amPmButton,
            tabindex: "0",
            onClick: b,
            onKeydown: [
              pe($e(b, ["prevent"]), ["enter"]),
              pe($e(b, ["prevent"]), ["space"])
            ]
          }, Ve(M.value), 41, fr))
        ])),
        (D(!0), G(ke, null, Se(z.value, (ne, k) => (D(), Me(Bt, {
          key: k,
          name: u(w)(E[ne.type]),
          css: u(Y)
        }, {
          default: ye(() => [
            E[ne.type] ? (D(), Me(jt, {
              key: 0,
              items: c(ne.type),
              "is-last": d.autoApply && !u(y).keepActionRow,
              "esc-close": d.escClose,
              type: ne.type,
              "text-input": d.textInput,
              config: d.config,
              "arrow-navigation": d.arrowNavigation,
              "aria-labels": d.ariaLabels,
              onSelected: (U) => j(ne.type, U),
              onToggle: (U) => m(ne.type),
              onResetFlow: p[0] || (p[0] = (U) => d.$emit("reset-flow"))
            }, ze({
              "button-icon": ye(() => [
                d.$slots["clock-icon"] ? ie(d.$slots, "clock-icon", { key: 0 }) : X("", !0),
                d.$slots["clock-icon"] ? X("", !0) : (D(), Me(na(d.timePickerInline ? u(Yt) : u(Ya)), { key: 1 }))
              ]),
              _: 2
            }, [
              d.$slots[`${ne.type}-overlay-value`] ? {
                name: "item",
                fn: ye(({ item: U }) => [
                  ie(d.$slots, `${ne.type}-overlay-value`, {
                    text: U.text,
                    value: U.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "is-last", "esc-close", "type", "text-input", "config", "arrow-navigation", "aria-labels", "onSelected", "onToggle"])) : X("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), mr = { class: "dp--tp-wrap" }, pr = ["aria-label", "tabindex"], gr = ["tabindex"], yr = ["aria-label"], Cn = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: {
      type: Function,
      default: () => !1
    },
    ...xe
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { buildMatrix: f, setTimePicker: o } = gt(), s = Tt(), { defaultedTransitions: C, defaultedAriaLabels: A, defaultedTextInput: y, defaultedConfig: R, defaultedRange: w } = Re(a), { transitionName: Y, showTransition: E } = Ut(C), { hideNavigationButtons: M } = ra(), F = x(null), T = x(null), H = x([]), B = x(null);
    Ue(() => {
      n("mount"), !a.timePicker && a.arrowNavigation ? f([Ie(F.value)], "time") : o(!0, a.timePicker);
    });
    const P = Q(() => w.value.enabled && a.modelAuto ? mn(a.internalModelValue) : !0), I = x(!1), L = (c) => ({
      hours: Array.isArray(a.hours) ? a.hours[c] : a.hours,
      minutes: Array.isArray(a.minutes) ? a.minutes[c] : a.minutes,
      seconds: Array.isArray(a.seconds) ? a.seconds[c] : a.seconds
    }), J = Q(() => {
      const c = [];
      if (w.value.enabled)
        for (let h = 0; h < 2; h++)
          c.push(L(h));
      else
        c.push(L(0));
      return c;
    }), $ = (c, h = !1, v = "") => {
      h || n("reset-flow"), I.value = c, n(c ? "overlay-opened" : "overlay-closed"), a.arrowNavigation && o(c), it(() => {
        v !== "" && H.value[0] && H.value[0].openChildCmp(v);
      });
    }, se = Q(() => ({
      dp__btn: !0,
      dp__button: !0,
      dp__button_bottom: a.autoApply && !R.value.keepActionRow
    })), le = Ke(s, "timePicker"), ae = (c, h, v) => w.value.enabled ? h === 0 ? [c, J.value[1][v]] : [J.value[0][v], c] : c, _ = (c) => {
      n("update:hours", c);
    }, z = (c) => {
      n("update:minutes", c);
    }, ee = (c) => {
      n("update:seconds", c);
    }, V = () => {
      if (B.value && !y.value.enabled && !a.noOverlayFocus) {
        const c = pn(B.value);
        c && c.focus({ preventScroll: !0 });
      }
    };
    return t({ toggleTimePicker: $ }), (c, h) => {
      var v;
      return D(), G("div", mr, [
        !c.timePicker && !c.timePickerInline ? Jt((D(), G("button", {
          key: 0,
          ref_key: "openTimePickerBtn",
          ref: F,
          type: "button",
          class: De(se.value),
          "aria-label": (v = u(A)) == null ? void 0 : v.openTimePicker,
          tabindex: c.noOverlayFocus ? void 0 : 0,
          onKeydown: [
            h[0] || (h[0] = pe((q) => $(!0), ["enter"])),
            h[1] || (h[1] = pe((q) => $(!0), ["space"]))
          ],
          onClick: h[2] || (h[2] = (q) => $(!0))
        }, [
          c.$slots["clock-icon"] ? ie(c.$slots, "clock-icon", { key: 0 }) : X("", !0),
          c.$slots["clock-icon"] ? X("", !0) : (D(), Me(u(Ya), { key: 1 }))
        ], 42, pr)), [
          [Zt, !u(M)(c.hideNavigation, "time")]
        ]) : X("", !0),
        Qe(Bt, {
          name: u(Y)(I.value),
          css: u(E) && !c.timePickerInline
        }, {
          default: ye(() => {
            var q;
            return [
              I.value || c.timePicker || c.timePickerInline ? (D(), G("div", {
                key: 0,
                ref_key: "overlayRef",
                ref: B,
                class: De({
                  dp__overlay: !c.timePickerInline,
                  "dp--overlay-absolute": !a.timePicker && !c.timePickerInline,
                  "dp--overlay-relative": a.timePicker
                }),
                style: Je(c.timePicker ? { height: `${u(R).modeHeight}px` } : void 0),
                tabindex: c.timePickerInline ? void 0 : 0
              }, [
                me("div", {
                  class: De(
                    c.timePickerInline ? "dp__time_picker_inline_container" : "dp__overlay_container dp__container_flex dp__time_picker_overlay_container"
                  ),
                  style: { display: "flex" }
                }, [
                  c.$slots["time-picker-overlay"] ? ie(c.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: _,
                    setMinutes: z,
                    setSeconds: ee
                  }) : X("", !0),
                  c.$slots["time-picker-overlay"] ? X("", !0) : (D(), G("div", {
                    key: 1,
                    class: De(c.timePickerInline ? "dp__flex" : "dp__overlay_row dp__flex_row")
                  }, [
                    (D(!0), G(ke, null, Se(J.value, (N, m) => Jt((D(), Me(vr, Ne({ key: m }, {
                      ...c.$props,
                      order: m,
                      hours: N.hours,
                      minutes: N.minutes,
                      seconds: N.seconds,
                      closeTimePickerBtn: T.value,
                      disabledTimesConfig: e.disabledTimesConfig,
                      disabled: m === 0 ? c.fixedStart : c.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: H,
                      "validate-time": (K, te) => e.validateTime(K, ae(te, m, K)),
                      "onUpdate:hours": (K) => _(ae(K, m, "hours")),
                      "onUpdate:minutes": (K) => z(ae(K, m, "minutes")),
                      "onUpdate:seconds": (K) => ee(ae(K, m, "seconds")),
                      onMounted: V,
                      onOverlayClosed: V,
                      onAmPmChange: h[3] || (h[3] = (K) => c.$emit("am-pm-change", K))
                    }), ze({ _: 2 }, [
                      Se(u(le), (K, te) => ({
                        name: K,
                        fn: ye((i) => [
                          ie(c.$slots, K, Be(He(i)))
                        ])
                      }))
                    ]), 1040, ["validate-time", "onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Zt, m === 0 ? !0 : P.value]
                    ])), 128))
                  ], 2)),
                  !c.timePicker && !c.timePickerInline ? Jt((D(), G("button", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: T,
                    type: "button",
                    class: De(se.value),
                    "aria-label": (q = u(A)) == null ? void 0 : q.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      h[4] || (h[4] = pe((N) => $(!1), ["enter"])),
                      h[5] || (h[5] = pe((N) => $(!1), ["space"]))
                    ],
                    onClick: h[6] || (h[6] = (N) => $(!1))
                  }, [
                    c.$slots["calendar-icon"] ? ie(c.$slots, "calendar-icon", { key: 0 }) : X("", !0),
                    c.$slots["calendar-icon"] ? X("", !0) : (D(), Me(u(Yt), { key: 1 }))
                  ], 42, yr)), [
                    [Zt, !u(M)(c.hideNavigation, "time")]
                  ]) : X("", !0)
                ], 2)
              ], 14, gr)) : X("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), _n = (e, t, r, n) => {
  const { defaultedRange: a } = Re(e), f = (B, P) => Array.isArray(t[B]) ? t[B][P] : t[B], o = (B) => e.enableSeconds ? Array.isArray(t.seconds) ? t.seconds[B] : t.seconds : 0, s = (B, P) => B ? P !== void 0 ? mt(B, f("hours", P), f("minutes", P), o(P)) : mt(B, t.hours, t.minutes, o()) : Ca(W(), o(P)), C = (B, P) => {
    t[B] = P;
  }, A = Q(() => e.modelAuto && a.value.enabled ? Array.isArray(r.value) ? r.value.length > 1 : !1 : a.value.enabled), y = (B, P) => {
    const I = Object.fromEntries(
      Object.keys(t).map((L) => L === B ? [L, P] : [L, t[L]].slice())
    );
    if (A.value && !a.value.disableTimeRangeValidation) {
      const L = ($) => r.value ? mt(
        r.value[$],
        I.hours[$],
        I.minutes[$],
        I.seconds[$]
      ) : null, J = ($) => _a(r.value[$], 0);
      return !(we(L(0), L(1)) && (Lt(L(0), J(1)) || Wt(L(1), J(0))));
    }
    return !0;
  }, R = (B, P) => {
    y(B, P) && (C(B, P), n && n());
  }, w = (B) => {
    R("hours", B);
  }, Y = (B) => {
    R("minutes", B);
  }, E = (B) => {
    R("seconds", B);
  }, M = (B, P, I, L) => {
    P && w(B), !P && !I && Y(B), I && E(B), r.value && L(r.value);
  }, F = (B) => {
    if (B) {
      const P = Array.isArray(B), I = P ? [+B[0].hours, +B[1].hours] : +B.hours, L = P ? [+B[0].minutes, +B[1].minutes] : +B.minutes, J = P ? [+B[0].seconds, +B[1].seconds] : +B.seconds;
      C("hours", I), C("minutes", L), e.enableSeconds && C("seconds", J);
    }
  }, T = (B, P) => {
    const I = {
      hours: Array.isArray(t.hours) ? t.hours[B] : t.hours,
      disabledArr: []
    };
    return (P || P === 0) && (I.hours = P), Array.isArray(e.disabledTimes) && (I.disabledArr = a.value.enabled && Array.isArray(e.disabledTimes[B]) ? e.disabledTimes[B] : e.disabledTimes), I;
  }, H = Q(() => (B, P) => {
    var I;
    if (Array.isArray(e.disabledTimes)) {
      const { disabledArr: L, hours: J } = T(B, P), $ = L.filter((se) => +se.hours === J);
      return ((I = $[0]) == null ? void 0 : I.minutes) === "*" ? { hours: [J], minutes: void 0, seconds: void 0 } : {
        hours: [],
        minutes: ($ == null ? void 0 : $.map((se) => +se.minutes)) ?? [],
        seconds: ($ == null ? void 0 : $.map((se) => se.seconds ? +se.seconds : void 0)) ?? []
      };
    }
    return { hours: [], minutes: [], seconds: [] };
  });
  return {
    setTime: C,
    updateHours: w,
    updateMinutes: Y,
    updateSeconds: E,
    getSetDateTime: s,
    updateTimeValues: M,
    getSecondsValue: o,
    assignStartTime: F,
    validateTime: y,
    disabledTimesConfig: H
  };
}, hr = (e, t) => {
  const { modelValue: r, time: n } = Kt(e, t), { defaultedStartTime: a, defaultedRange: f } = Re(e), { updateTimeValues: o, getSetDateTime: s, setTime: C, assignStartTime: A, disabledTimesConfig: y, validateTime: R } = _n(e, n, r), w = (P) => {
    const { hours: I, minutes: L, seconds: J } = P;
    return { hours: +I, minutes: +L, seconds: J ? +J : 0 };
  }, Y = () => {
    if (e.startTime) {
      if (Array.isArray(e.startTime)) {
        const I = w(e.startTime[0]), L = w(e.startTime[1]);
        return [Ae(W(), I), Ae(W(), L)];
      }
      const P = w(e.startTime);
      return Ae(W(), P);
    }
    return f.value.enabled ? [null, null] : null;
  }, E = () => {
    if (f.value.enabled) {
      const [P, I] = Y();
      r.value = [s(P, 0), s(I, 1)];
    } else
      r.value = s(Y());
  }, M = (P) => Array.isArray(P) ? [$t(W(P[0])), $t(W(P[1]))] : [$t(P ?? W())], F = (P, I, L) => {
    C("hours", P), C("minutes", I), C("seconds", e.enableSeconds ? L : 0);
  }, T = () => {
    const [P, I] = M(r.value);
    return f.value.enabled ? F(
      [P.hours, I.hours],
      [P.minutes, I.minutes],
      [P.seconds, I.seconds]
    ) : F(P.hours, P.minutes, P.seconds);
  };
  Ue(() => {
    if (!e.shadow)
      return A(a.value), r.value ? T() : E();
  });
  const H = () => {
    Array.isArray(r.value) ? r.value = r.value.map((P, I) => P && s(P, I)) : r.value = s(r.value), t("time-update");
  };
  return {
    modelValue: r,
    time: n,
    disabledTimesConfig: y,
    updateTime: (P, I = !0, L = !1) => {
      o(P, I, L, H);
    },
    validateTime: R
  };
}, br = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePickerSolo",
  props: {
    ...xe
  },
  emits: ["update:internal-model-value", "time-update", "am-pm-change"],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = Tt(), o = Ke(f, "timePicker"), { time: s, modelValue: C, disabledTimesConfig: A, updateTime: y, validateTime: R } = hr(a, n);
    return t({ getSidebarProps: () => ({
      modelValue: C,
      time: s,
      updateTime: y
    }) }), (Y, E) => (D(), Me(sa, {
      "multi-calendars": 0,
      stretch: ""
    }, {
      default: ye(() => [
        Qe(Cn, Ne(Y.$props, {
          hours: u(s).hours,
          minutes: u(s).minutes,
          seconds: u(s).seconds,
          "internal-model-value": Y.internalModelValue,
          "disabled-times-config": u(A),
          "validate-time": u(R),
          "onUpdate:hours": E[0] || (E[0] = (M) => u(y)(M)),
          "onUpdate:minutes": E[1] || (E[1] = (M) => u(y)(M, !1)),
          "onUpdate:seconds": E[2] || (E[2] = (M) => u(y)(M, !1, !0)),
          onAmPmChange: E[3] || (E[3] = (M) => Y.$emit("am-pm-change", M))
        }), ze({ _: 2 }, [
          Se(u(o), (M, F) => ({
            name: M,
            fn: ye((T) => [
              ie(Y.$slots, M, Be(He(T)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"])
      ]),
      _: 3
    }));
  }
}), kr = { class: "dp__month_year_row" }, wr = ["aria-label", "onClick", "onKeydown"], Mr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DpHeader",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    ...xe
  },
  emits: ["update-month-year", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, {
      defaultedTransitions: f,
      defaultedAriaLabels: o,
      defaultedMultiCalendars: s,
      defaultedFilters: C,
      defaultedConfig: A,
      defaultedHighlight: y,
      propDates: R
    } = Re(a), { transitionName: w, showTransition: Y } = Ut(f), { buildMatrix: E } = gt(), { handleMonthYearChange: M, isDisabled: F, updateMonthYear: T } = Bl(a, n), { showLeftIcon: H, showRightIcon: B } = ra(), P = x(!1), I = x(!1), L = x([null, null, null, null]);
    Ue(() => {
      n("mount");
    });
    const J = (m) => ({
      get: () => a[m],
      set: (K) => {
        const te = m === qe.month ? qe.year : qe.month;
        n("update-month-year", { [m]: K, [te]: a[te] }), m === qe.month ? V(!0) : c(!0);
      }
    }), $ = Q(J(qe.month)), se = Q(J(qe.year)), le = Q(() => (m) => ({
      month: a.month,
      year: a.year,
      items: m === qe.month ? a.months : a.years,
      instance: a.instance,
      updateMonthYear: T,
      toggle: m === qe.month ? V : c
    })), ae = Q(() => {
      const m = a.months.find((K) => K.value === a.month);
      return m || { text: "", value: 0 };
    }), _ = Q(() => _t(a.months, (m) => {
      const K = a.month === m.value, te = Ht(
        m.value,
        yn(a.year, R.value.minDate),
        hn(a.year, R.value.maxDate)
      ) || C.value.months.includes(m.value), i = Dn(y.value, m.value, a.year);
      return { active: K, disabled: te, highlighted: i };
    })), z = Q(() => _t(a.years, (m) => {
      const K = a.year === m.value, te = Ht(
        m.value,
        Ot(R.value.minDate),
        Ot(R.value.maxDate)
      ) || C.value.years.includes(m.value), i = Va(y.value, m.value);
      return { active: K, disabled: te, highlighted: i };
    })), ee = (m, K) => {
      K !== void 0 ? m.value = K : m.value = !m.value, m.value || n("overlay-closed");
    }, V = (m = !1, K) => {
      h(m), ee(P, K);
    }, c = (m = !1, K) => {
      h(m), ee(I, K);
    }, h = (m) => {
      m || n("reset-flow");
    }, v = (m, K) => {
      a.arrowNavigation && (L.value[K] = Ie(m), E(L.value, "monthYear"));
    }, q = Q(() => {
      var m, K;
      return [
        {
          type: qe.month,
          index: 1,
          toggle: V,
          modelValue: $.value,
          updateModelValue: (te) => $.value = te,
          text: ae.value.text,
          showSelectionGrid: P.value,
          items: _.value,
          ariaLabel: (m = o.value) == null ? void 0 : m.openMonthsOverlay
        },
        {
          type: qe.year,
          index: 2,
          toggle: c,
          modelValue: se.value,
          updateModelValue: (te) => se.value = te,
          text: gn(a.year, a.locale),
          showSelectionGrid: I.value,
          items: z.value,
          ariaLabel: (K = o.value) == null ? void 0 : K.openYearsOverlay
        }
      ];
    }), N = Q(() => a.disableYearSelect ? [q.value[0]] : a.yearFirst ? [...q.value].reverse() : q.value);
    return t({
      toggleMonthPicker: V,
      toggleYearPicker: c,
      handleMonthYearChange: M
    }), (m, K) => {
      var te, i, b;
      return D(), G("div", kr, [
        m.$slots["month-year"] ? ie(m.$slots, "month-year", Be(Ne({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: u(T), handleMonthYearChange: u(M), instance: e.instance }))) : (D(), G(ke, { key: 1 }, [
          u(H)(u(s), e.instance) && !m.vertical ? (D(), Me(Ft, {
            key: 0,
            "aria-label": (te = u(o)) == null ? void 0 : te.prevMonth,
            disabled: u(F)(!1),
            onActivate: K[0] || (K[0] = (l) => u(M)(!1, !0)),
            onSetRef: K[1] || (K[1] = (l) => v(l, 0))
          }, {
            default: ye(() => [
              m.$slots["arrow-left"] ? ie(m.$slots, "arrow-left", { key: 0 }) : X("", !0),
              m.$slots["arrow-left"] ? X("", !0) : (D(), Me(u(Oa), { key: 1 }))
            ]),
            _: 3
          }, 8, ["aria-label", "disabled"])) : X("", !0),
          me("div", {
            class: De(["dp__month_year_wrap", {
              dp__year_disable_select: m.disableYearSelect
            }])
          }, [
            (D(!0), G(ke, null, Se(N.value, (l, S) => (D(), G(ke, {
              key: l.type
            }, [
              me("button", {
                ref_for: !0,
                ref: (j) => v(j, S + 1),
                type: "button",
                class: "dp__btn dp__month_year_select",
                tabindex: "0",
                "aria-label": l.ariaLabel,
                onClick: l.toggle,
                onKeydown: [
                  pe($e(l.toggle, ["prevent"]), ["enter"]),
                  pe($e(l.toggle, ["prevent"]), ["space"])
                ]
              }, [
                m.$slots[l.type] ? ie(m.$slots, l.type, {
                  key: 0,
                  text: l.text,
                  value: a[l.type]
                }) : X("", !0),
                m.$slots[l.type] ? X("", !0) : (D(), G(ke, { key: 1 }, [
                  dt(Ve(l.text), 1)
                ], 64))
              ], 40, wr),
              Qe(Bt, {
                name: u(w)(l.showSelectionGrid),
                css: u(Y)
              }, {
                default: ye(() => [
                  l.showSelectionGrid ? (D(), Me(jt, {
                    key: 0,
                    items: l.items,
                    "arrow-navigation": m.arrowNavigation,
                    "hide-navigation": m.hideNavigation,
                    "is-last": m.autoApply && !u(A).keepActionRow,
                    "skip-button-ref": !1,
                    config: m.config,
                    type: l.type,
                    "header-refs": [],
                    "esc-close": m.escClose,
                    "menu-wrap-ref": m.menuWrapRef,
                    "text-input": m.textInput,
                    "aria-labels": m.ariaLabels,
                    onSelected: l.updateModelValue,
                    onToggle: l.toggle
                  }, ze({
                    "button-icon": ye(() => [
                      m.$slots["calendar-icon"] ? ie(m.$slots, "calendar-icon", { key: 0 }) : X("", !0),
                      m.$slots["calendar-icon"] ? X("", !0) : (D(), Me(u(Yt), { key: 1 }))
                    ]),
                    _: 2
                  }, [
                    m.$slots[`${l.type}-overlay-value`] ? {
                      name: "item",
                      fn: ye(({ item: j }) => [
                        ie(m.$slots, `${l.type}-overlay-value`, {
                          text: j.text,
                          value: j.value
                        })
                      ]),
                      key: "0"
                    } : void 0,
                    m.$slots[`${l.type}-overlay`] ? {
                      name: "overlay",
                      fn: ye(() => [
                        ie(m.$slots, `${l.type}-overlay`, Be(He(le.value(l.type))))
                      ]),
                      key: "1"
                    } : void 0,
                    m.$slots[`${l.type}-overlay-header`] ? {
                      name: "header",
                      fn: ye(() => [
                        ie(m.$slots, `${l.type}-overlay-header`, {
                          toggle: l.toggle
                        })
                      ]),
                      key: "2"
                    } : void 0
                  ]), 1032, ["items", "arrow-navigation", "hide-navigation", "is-last", "config", "type", "esc-close", "menu-wrap-ref", "text-input", "aria-labels", "onSelected", "onToggle"])) : X("", !0)
                ]),
                _: 2
              }, 1032, ["name", "css"])
            ], 64))), 128))
          ], 2),
          u(H)(u(s), e.instance) && m.vertical ? (D(), Me(Ft, {
            key: 1,
            "aria-label": (i = u(o)) == null ? void 0 : i.prevMonth,
            disabled: u(F)(!1),
            onActivate: K[2] || (K[2] = (l) => u(M)(!1, !0))
          }, {
            default: ye(() => [
              m.$slots["arrow-up"] ? ie(m.$slots, "arrow-up", { key: 0 }) : X("", !0),
              m.$slots["arrow-up"] ? X("", !0) : (D(), Me(u(Ia), { key: 1 }))
            ]),
            _: 3
          }, 8, ["aria-label", "disabled"])) : X("", !0),
          u(B)(u(s), e.instance) ? (D(), Me(Ft, {
            key: 2,
            ref: "rightIcon",
            disabled: u(F)(!0),
            "aria-label": (b = u(o)) == null ? void 0 : b.nextMonth,
            onActivate: K[3] || (K[3] = (l) => u(M)(!0, !0)),
            onSetRef: K[4] || (K[4] = (l) => v(l, m.disableYearSelect ? 2 : 3))
          }, {
            default: ye(() => [
              m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? ie(m.$slots, m.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : X("", !0),
              m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? X("", !0) : (D(), Me(na(m.vertical ? u(Na) : u(Ba)), { key: 1 }))
            ]),
            _: 3
          }, 8, ["disabled", "aria-label"])) : X("", !0)
        ], 64))
      ]);
    };
  }
}), Dr = ["aria-label"], $r = {
  class: "dp__calendar_header",
  role: "row"
}, Ar = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, Tr = ["aria-label"], Sr = /* @__PURE__ */ me("div", { class: "dp__calendar_header_separator" }, null, -1), Rr = ["aria-label"], Pr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, Cr = { class: "dp__cell_inner" }, _r = ["id", "aria-selected", "aria-disabled", "aria-label", "onClick", "onKeydown", "onMouseenter", "onMouseleave", "onMousedown"], Or = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DpCalendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...xe
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { buildMultiLevelMatrix: f } = gt(), {
      defaultedTransitions: o,
      defaultedConfig: s,
      defaultedAriaLabels: C,
      defaultedMultiCalendars: A,
      defaultedWeekNumbers: y,
      defaultedMultiDates: R
    } = Re(a), w = x(null), Y = x({
      bottom: "",
      left: "",
      transform: ""
    }), E = x([]), M = x(null), F = x(!0), T = x(""), H = x({ startX: 0, endX: 0, startY: 0, endY: 0 }), B = x([]), P = x({ left: "50%" }), I = x(!1), L = Q(() => a.calendar ? a.calendar(a.mappedDates) : a.mappedDates), J = Q(() => a.dayNames ? Array.isArray(a.dayNames) ? a.dayNames : a.dayNames(a.locale, +a.weekStart) : xn(a.formatLocale, a.locale, +a.weekStart));
    Ue(() => {
      n("mount", { cmp: "calendar", refs: E }), s.value.noSwipe || M.value && (M.value.addEventListener("touchstart", q, { passive: !1 }), M.value.addEventListener("touchend", N, { passive: !1 }), M.value.addEventListener("touchmove", m, { passive: !1 })), a.monthChangeOnScroll && M.value && M.value.addEventListener("wheel", i, { passive: !1 });
    });
    const $ = (p) => p ? a.vertical ? "vNext" : "next" : a.vertical ? "vPrevious" : "previous", se = (p, de) => {
      if (a.transitions) {
        const ne = je(st(W(), a.month, a.year));
        T.value = _e(je(st(W(), p, de)), ne) ? o.value[$(!0)] : o.value[$(!1)], F.value = !1, it(() => {
          F.value = !0;
        });
      }
    }, le = Q(
      () => ({
        [a.calendarClassName]: !!a.calendarClassName
      })
    ), ae = Q(() => (p) => {
      const de = tl(p);
      return {
        dp__marker_dot: de.type === "dot",
        dp__marker_line: de.type === "line"
      };
    }), _ = Q(() => (p) => we(p, w.value)), z = Q(() => ({
      dp__calendar: !0,
      dp__calendar_next: A.value.count > 0 && a.instance !== 0
    })), ee = Q(() => (p) => a.hideOffsetDates ? p.current : !0), V = (p) => nt(p, "yyyy-MM-dd"), c = async (p, de, ne) => {
      const k = Ie(E.value[de][ne]);
      if (k) {
        const { width: U, height: ve } = k.getBoundingClientRect();
        w.value = p.value;
        let ue = { left: `${U / 2}px` }, he = -50;
        if (await it(), B.value[0]) {
          const { left: oe, width: We } = B.value[0].getBoundingClientRect();
          oe < 0 && (ue = { left: "0" }, he = 0, P.value.left = `${U / 2}px`), window.innerWidth < oe + We && (ue = { right: "0" }, he = 0, P.value.left = `${We - U / 2}px`);
        }
        Y.value = {
          bottom: `${ve}px`,
          ...ue,
          transform: `translateX(${he}%)`
        }, n("tooltip-open", p.marker);
      }
    }, h = async (p, de, ne) => {
      var k, U;
      if (I.value && R.value.enabled && R.value.dragSelect)
        return n("select-date", p);
      n("set-hover-date", p), (U = (k = p.marker) == null ? void 0 : k.tooltip) != null && U.length && await c(p, de, ne);
    }, v = (p) => {
      w.value && (w.value = null, Y.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), n("tooltip-close", p.marker));
    }, q = (p) => {
      H.value.startX = p.changedTouches[0].screenX, H.value.startY = p.changedTouches[0].screenY;
    }, N = (p) => {
      H.value.endX = p.changedTouches[0].screenX, H.value.endY = p.changedTouches[0].screenY, K();
    }, m = (p) => {
      a.vertical && !a.inline && p.preventDefault();
    }, K = () => {
      const p = a.vertical ? "Y" : "X";
      Math.abs(H.value[`start${p}`] - H.value[`end${p}`]) > 10 && n("handle-swipe", H.value[`start${p}`] > H.value[`end${p}`] ? "right" : "left");
    }, te = (p, de, ne) => {
      p && (Array.isArray(E.value[de]) ? E.value[de][ne] = p : E.value[de] = [p]), a.arrowNavigation && f(E.value, "calendar");
    }, i = (p) => {
      a.monthChangeOnScroll && (p.preventDefault(), n("handle-scroll", p));
    }, b = (p) => y.value.type === "local" ? jn(p.value, { weekStartsOn: +a.weekStart }) : y.value.type === "iso" ? Gn(p.value) : typeof y.value.type == "function" ? y.value.type(p.value) : "", l = (p) => {
      const de = p[0];
      return y.value.hideOnOffsetDates ? p.some((ne) => ne.current) ? b(de) : "" : b(de);
    }, S = (p, de) => {
      R.value.enabled || (vt(p, s.value), n("select-date", de));
    }, j = (p) => {
      vt(p, s.value);
    }, d = (p) => {
      R.value.enabled && R.value.dragSelect ? (I.value = !0, n("select-date", p)) : R.value.enabled && n("select-date", p);
    };
    return t({ triggerTransition: se }), (p, de) => {
      var ne;
      return D(), G("div", {
        class: De(z.value)
      }, [
        me("div", {
          ref_key: "calendarWrapRef",
          ref: M,
          role: "grid",
          class: De(le.value),
          "aria-label": (ne = u(C)) == null ? void 0 : ne.calendarWrap
        }, [
          me("div", $r, [
            p.weekNumbers ? (D(), G("div", Ar, Ve(p.weekNumName), 1)) : X("", !0),
            (D(!0), G(ke, null, Se(J.value, (k, U) => {
              var ve, ue;
              return D(), G("div", {
                key: U,
                class: "dp__calendar_header_item",
                role: "gridcell",
                "aria-label": (ue = (ve = u(C)) == null ? void 0 : ve.weekDay) == null ? void 0 : ue.call(ve, U)
              }, [
                p.$slots["calendar-header"] ? ie(p.$slots, "calendar-header", {
                  key: 0,
                  day: k,
                  index: U
                }) : X("", !0),
                p.$slots["calendar-header"] ? X("", !0) : (D(), G(ke, { key: 1 }, [
                  dt(Ve(k), 1)
                ], 64))
              ], 8, Tr);
            }), 128))
          ]),
          Sr,
          Qe(Bt, {
            name: T.value,
            css: !!p.transitions
          }, {
            default: ye(() => {
              var k;
              return [
                F.value ? (D(), G("div", {
                  key: 0,
                  class: "dp__calendar",
                  role: "rowgroup",
                  "aria-label": ((k = u(C)) == null ? void 0 : k.calendarDays) || void 0,
                  onMouseleave: de[1] || (de[1] = (U) => I.value = !1)
                }, [
                  (D(!0), G(ke, null, Se(L.value, (U, ve) => (D(), G("div", {
                    key: ve,
                    class: "dp__calendar_row",
                    role: "row"
                  }, [
                    p.weekNumbers ? (D(), G("div", Pr, [
                      me("div", Cr, Ve(l(U.days)), 1)
                    ])) : X("", !0),
                    (D(!0), G(ke, null, Se(U.days, (ue, he) => {
                      var oe, We, Fe;
                      return D(), G("div", {
                        id: V(ue.value),
                        ref_for: !0,
                        ref: (Ye) => te(Ye, ve, he),
                        key: he + ve,
                        role: "gridcell",
                        class: "dp__calendar_item",
                        "aria-selected": (ue.classData.dp__active_date || ue.classData.dp__range_start || ue.classData.dp__range_start) ?? void 0,
                        "aria-disabled": ue.classData.dp__cell_disabled || void 0,
                        "aria-label": (We = (oe = u(C)) == null ? void 0 : oe.day) == null ? void 0 : We.call(oe, ue),
                        tabindex: "0",
                        onClick: $e((Ye) => S(Ye, ue), ["prevent"]),
                        onKeydown: [
                          pe((Ye) => p.$emit("select-date", ue), ["enter"]),
                          pe((Ye) => p.$emit("handle-space", ue), ["space"])
                        ],
                        onMouseenter: (Ye) => h(ue, ve, he),
                        onMouseleave: (Ye) => v(ue),
                        onMousedown: (Ye) => d(ue),
                        onMouseup: de[0] || (de[0] = (Ye) => I.value = !1)
                      }, [
                        me("div", {
                          class: De(["dp__cell_inner", ue.classData])
                        }, [
                          p.$slots.day && ee.value(ue) ? ie(p.$slots, "day", {
                            key: 0,
                            day: +ue.text,
                            date: ue.value
                          }) : X("", !0),
                          p.$slots.day ? X("", !0) : (D(), G(ke, { key: 1 }, [
                            dt(Ve(ue.text), 1)
                          ], 64)),
                          ue.marker && ee.value(ue) ? (D(), G(ke, { key: 2 }, [
                            p.$slots.marker ? ie(p.$slots, "marker", {
                              key: 0,
                              marker: ue.marker,
                              day: +ue.text,
                              date: ue.value
                            }) : (D(), G("div", {
                              key: 1,
                              class: De(ae.value(ue.marker)),
                              style: Je(ue.marker.color ? { backgroundColor: ue.marker.color } : {})
                            }, null, 6))
                          ], 64)) : X("", !0),
                          _.value(ue.value) ? (D(), G("div", {
                            key: 3,
                            ref_for: !0,
                            ref_key: "activeTooltip",
                            ref: B,
                            class: "dp__marker_tooltip",
                            style: Je(Y.value)
                          }, [
                            (Fe = ue.marker) != null && Fe.tooltip ? (D(), G("div", {
                              key: 0,
                              class: "dp__tooltip_content",
                              onClick: j
                            }, [
                              (D(!0), G(ke, null, Se(ue.marker.tooltip, (Ye, ht) => (D(), G("div", {
                                key: ht,
                                class: "dp__tooltip_text"
                              }, [
                                p.$slots["marker-tooltip"] ? ie(p.$slots, "marker-tooltip", {
                                  key: 0,
                                  tooltip: Ye,
                                  day: ue.value
                                }) : X("", !0),
                                p.$slots["marker-tooltip"] ? X("", !0) : (D(), G(ke, { key: 1 }, [
                                  me("div", {
                                    class: "dp__tooltip_mark",
                                    style: Je(Ye.color ? { backgroundColor: Ye.color } : {})
                                  }, null, 4),
                                  me("div", null, Ve(Ye.text), 1)
                                ], 64))
                              ]))), 128)),
                              me("div", {
                                class: "dp__arrow_bottom_tp",
                                style: Je(P.value)
                              }, null, 4)
                            ])) : X("", !0)
                          ], 4)) : X("", !0)
                        ], 2)
                      ], 40, _r);
                    }), 128))
                  ]))), 128))
                ], 40, Rr)) : X("", !0)
              ];
            }),
            _: 3
          }, 8, ["name", "css"])
        ], 10, Dr)
      ], 2);
    };
  }
}), an = (e) => Array.isArray(e), Br = (e, t, r, n) => {
  const a = x([]), f = x(/* @__PURE__ */ new Date()), { modelValue: o, calendars: s, time: C } = Kt(e, t), { defaultedMultiCalendars: A, defaultedStartTime: y, defaultedRange: R, defaultedTz: w, propDates: Y, defaultedMultiDates: E } = Re(e), { validateMonthYearInRange: M, isDisabled: F, isDateRangeAllowed: T, checkMinMaxRange: H } = yt(e), { updateTimeValues: B, getSetDateTime: P, setTime: I, assignStartTime: L, validateTime: J, disabledTimesConfig: $ } = _n(e, C, o, n), se = Q(
    () => (g) => s.value[g] ? s.value[g].month : 0
  ), le = Q(
    () => (g) => s.value[g] ? s.value[g].year : 0
  ), ae = (g, Z, ce) => {
    var O, re;
    s.value[g] || (s.value[g] = { month: 0, year: 0 }), s.value[g].month = Ja(Z) ? (O = s.value[g]) == null ? void 0 : O.month : Z, s.value[g].year = Ja(ce) ? (re = s.value[g]) == null ? void 0 : re.year : ce;
  }, _ = () => {
    e.autoApply && t("select-date");
  };
  pt(
    o,
    (g, Z) => {
      JSON.stringify(g) !== JSON.stringify(Z) && V();
    },
    { deep: !0 }
  ), Ue(() => {
    e.shadow || (o.value || (l(), y.value && L(y.value)), V(!0), e.focusStartDate && e.startDate && l());
  });
  const z = Q(() => {
    var g;
    return (g = e.flow) != null && g.length && !e.partialFlow ? e.flowStep === e.flow.length : !0;
  }), ee = () => {
    e.autoApply && z.value && t("auto-apply");
  }, V = (g = !1) => {
    if (o.value)
      return Array.isArray(o.value) ? (a.value = o.value, K(g)) : v(o.value, g);
    if (A.value.count && g && !e.startDate)
      return h(W(), g);
  }, c = () => Array.isArray(o.value) && R.value.enabled ? be(o.value[0]) === be(o.value[1] ?? o.value[0]) : !1, h = (g, Z = !1) => {
    if ((!A.value.count || !A.value.static || Z) && ae(0, be(g), ge(g)), A.value.count && (!A.value.solo || !o.value || c()))
      for (let ce = 1; ce < A.value.count; ce++) {
        const O = Ae(W(), { month: se.value(ce - 1), year: le.value(ce - 1) }), re = cn(O, { months: 1 });
        s.value[ce] = { month: be(re), year: ge(re) };
      }
  }, v = (g, Z) => {
    h(g), I("hours", Ze(g)), I("minutes", lt(g)), I("seconds", Ct(g)), A.value.count && Z && b();
  }, q = (g) => {
    if (A.value.count) {
      if (A.value.solo)
        return 0;
      const Z = be(g[0]), ce = be(g[1]);
      return Math.abs(ce - Z) < A.value.count ? 0 : 1;
    }
    return 1;
  }, N = (g, Z) => {
    g[1] && R.value.showLastInRange ? h(g[q(g)], Z) : h(g[0], Z);
    const ce = (O, re) => [
      O(g[0]),
      g[1] ? O(g[1]) : C[re][1]
    ];
    I("hours", ce(Ze, "hours")), I("minutes", ce(lt, "minutes")), I("seconds", ce(Ct, "seconds"));
  }, m = (g, Z) => {
    if ((R.value.enabled || e.weekPicker) && !E.value.enabled)
      return N(g, Z);
    if (E.value.enabled && Z) {
      const ce = g[g.length - 1];
      return v(ce, Z);
    }
  }, K = (g) => {
    const Z = o.value;
    m(Z, g), A.value.count && A.value.solo && b();
  }, te = (g, Z) => {
    const ce = Ae(W(), { month: se.value(Z), year: le.value(Z) }), O = g < 0 ? Dt(ce, 1) : Vt(ce, 1);
    M(be(O), ge(O), g < 0, e.preventMinMaxNavigation) && (ae(Z, be(O), ge(O)), t("update-month-year", { instance: Z, month: be(O), year: ge(O) }), A.value.count && !A.value.solo && i(Z), r());
  }, i = (g) => {
    for (let Z = g - 1; Z >= 0; Z--) {
      const ce = Vt(Ae(W(), { month: se.value(Z + 1), year: le.value(Z + 1) }), 1);
      ae(Z, be(ce), ge(ce));
    }
    for (let Z = g + 1; Z <= A.value.count - 1; Z++) {
      const ce = Dt(Ae(W(), { month: se.value(Z - 1), year: le.value(Z - 1) }), 1);
      ae(Z, be(ce), ge(ce));
    }
  }, b = () => {
    if (Array.isArray(o.value) && o.value.length === 2) {
      const g = W(
        W(o.value[1] ? o.value[1] : Dt(o.value[0], 1))
      ), [Z, ce] = [be(o.value[0]), ge(o.value[0])], [O, re] = [be(o.value[1]), ge(o.value[1])];
      (Z !== O || Z === O && ce !== re) && A.value.solo && ae(1, be(g), ge(g));
    } else
      o.value && !Array.isArray(o.value) && (ae(0, be(o.value), ge(o.value)), h(W()));
  }, l = () => {
    e.startDate && (ae(0, be(W(e.startDate)), ge(W(e.startDate))), A.value.count && i(0));
  }, S = (g, Z) => {
    if (e.monthChangeOnScroll) {
      const ce = (/* @__PURE__ */ new Date()).getTime() - f.value.getTime(), O = Math.abs(g.deltaY);
      let re = 500;
      O > 1 && (re = 100), O > 100 && (re = 0), ce > re && (f.value = /* @__PURE__ */ new Date(), te(e.monthChangeOnScroll !== "inverse" ? -g.deltaY : g.deltaY, Z));
    }
  }, j = (g, Z, ce = !1) => {
    e.monthChangeOnArrows && e.vertical === ce && d(g, Z);
  }, d = (g, Z) => {
    te(g === "right" ? -1 : 1, Z);
  }, p = (g) => {
    if (Y.value.markers)
      return ta(g.value, Y.value.markers);
  }, de = (g, Z) => {
    switch (e.sixWeeks === !0 ? "append" : e.sixWeeks) {
      case "prepend":
        return [!0, !1];
      case "center":
        return [g == 0, !0];
      case "fair":
        return [g == 0 || Z > g, !0];
      case "append":
        return [!1, !1];
      default:
        return [!1, !1];
    }
  }, ne = (g, Z, ce, O) => {
    if (e.sixWeeks && g.length < 6) {
      const re = 6 - g.length, fe = (Z.getDay() + 7 - O) % 7, et = 6 - (ce.getDay() + 7 - O) % 7, [bt, ma] = de(fe, et);
      for (let kt = 1; kt <= re; kt++)
        if (ma ? !!(kt % 2) == bt : bt) {
          const Qt = g[0].days[0], pa = k(Mt(Qt.value, -7), be(Z));
          g.unshift({ days: pa });
        } else {
          const Qt = g[g.length - 1], pa = Qt.days[Qt.days.length - 1], Bn = k(Mt(pa.value, 1), be(Z));
          g.push({ days: Bn });
        }
    }
    return g;
  }, k = (g, Z) => {
    const ce = W(g), O = [];
    for (let re = 0; re < 7; re++) {
      const fe = Mt(ce, re), rt = be(fe) !== Z;
      O.push({
        text: e.hideOffsetDates && rt ? "" : fe.getDate(),
        value: fe,
        current: !rt,
        classData: {}
      });
    }
    return O;
  }, U = (g, Z) => {
    const ce = [], O = new Date(Z, g), re = new Date(Z, g + 1, 0), fe = e.weekStart, rt = sn(O, { weekStartsOn: fe }), et = (bt) => {
      const ma = k(bt, g);
      if (ce.push({ days: ma }), !ce[ce.length - 1].days.some(
        (kt) => we(je(kt.value), je(re))
      )) {
        const kt = Mt(bt, 7);
        et(kt);
      }
    };
    return et(rt), ne(ce, O, re, fe);
  }, ve = (g) => {
    const Z = mt(W(g.value), C.hours, C.minutes, ht());
    t("date-update", Z), E.value.enabled ? Wa(Z, o, E.value.limit) : o.value = Z, n(), it().then(() => {
      ee();
    });
  }, ue = (g) => R.value.noDisabledRange ? bn(a.value[0], g).some((ce) => F(ce)) : !1, he = () => {
    a.value = o.value ? o.value.slice() : [], a.value.length === 2 && !(R.value.fixedStart || R.value.fixedEnd) && (a.value = []);
  }, oe = (g, Z) => {
    const ce = [
      W(g.value),
      Mt(W(g.value), +R.value.autoRange)
    ];
    T(ce) ? (Z && We(g.value), a.value = ce) : t("invalid-date", g.value);
  }, We = (g) => {
    const Z = be(W(g)), ce = ge(W(g));
    if (ae(0, Z, ce), A.value.count > 0)
      for (let O = 1; O < A.value.count; O++) {
        const re = il(
          Ae(W(g), { year: se.value(O - 1), month: le.value(O - 1) })
        );
        ae(O, re.month, re.year);
      }
  }, Fe = (g) => {
    if (ue(g.value) || !H(g.value, o.value, R.value.fixedStart ? 0 : 1))
      return t("invalid-date", g.value);
    a.value = Rn(W(g.value), o, t, R);
  }, Ye = (g, Z) => {
    if (he(), R.value.autoRange)
      return oe(g, Z);
    if (R.value.fixedStart || R.value.fixedEnd)
      return Fe(g);
    a.value[0] ? H(W(g.value), o.value) && !ue(g.value) ? Pe(W(g.value), W(a.value[0])) ? (a.value.unshift(W(g.value)), t("range-end", a.value[0])) : (a.value[1] = W(g.value), t("range-end", a.value[1])) : (e.autoApply && t("auto-apply-invalid", g.value), t("invalid-date", g.value)) : (a.value[0] = W(g.value), t("range-start", a.value[0]));
  }, ht = (g = !0) => e.enableSeconds ? Array.isArray(C.seconds) ? g ? C.seconds[0] : C.seconds[1] : C.seconds : 0, It = (g) => {
    a.value[g] = mt(
      a.value[g],
      C.hours[g],
      C.minutes[g],
      ht(g !== 1)
    );
  }, Nt = () => {
    var g, Z;
    a.value[0] && a.value[1] && +((g = a.value) == null ? void 0 : g[0]) > +((Z = a.value) == null ? void 0 : Z[1]) && (a.value.reverse(), t("range-start", a.value[0]), t("range-end", a.value[1]));
  }, Ge = () => {
    a.value.length && (a.value[0] && !a.value[1] ? It(0) : (It(0), It(1), n()), Nt(), o.value = a.value.slice(), ua(a.value, t, e.autoApply, e.modelAuto));
  }, ia = (g, Z = !1) => {
    if (F(g.value) || !g.current && e.hideOffsetDates)
      return t("invalid-date", g.value);
    if (!R.value.enabled)
      return ve(g);
    an(C.hours) && an(C.minutes) && !E.value.enabled && (Ye(g, Z), Ge());
  }, da = (g, Z) => {
    var O;
    ae(g, Z.month, Z.year), A.value.count && !A.value.solo && i(g), t("update-month-year", { instance: g, month: Z.month, year: Z.year }), r(A.value.solo ? g : void 0);
    const ce = (O = e.flow) != null && O.length ? e.flow[e.flowStep] : void 0;
    !Z.fromNav && (ce === tt.month || ce === tt.year) && n();
  }, Gt = (g, Z) => {
    Sn({
      value: g,
      modelValue: o,
      range: R.value.enabled,
      timezone: Z ? void 0 : w.value.timezone
    }), _(), e.multiCalendars && it().then(() => V(!0));
  }, ca = () => {
    R.value.enabled ? o.value && Array.isArray(o.value) && o.value[0] ? o.value = Pe(W(), o.value[0]) ? [W(), o.value[0]] : [o.value[0], W()] : o.value = [W()] : o.value = W(), _();
  }, fa = () => {
    if (Array.isArray(o.value))
      if (E.value.enabled) {
        const g = va();
        o.value[o.value.length - 1] = P(g);
      } else
        o.value = o.value.map((g, Z) => g && P(g, Z));
    else
      o.value = P(o.value);
    t("time-update");
  }, va = () => Array.isArray(o.value) && o.value.length ? o.value[o.value.length - 1] : null;
  return {
    calendars: s,
    modelValue: o,
    month: se,
    year: le,
    time: C,
    disabledTimesConfig: $,
    validateTime: J,
    getCalendarDays: U,
    getMarker: p,
    handleScroll: S,
    handleSwipe: d,
    handleArrow: j,
    selectDate: ia,
    updateMonthYear: da,
    presetDate: Gt,
    selectCurrentDate: ca,
    updateTime: (g, Z = !0, ce = !1) => {
      B(g, Z, ce, fa);
    }
  };
}, Yr = { key: 0 }, Ir = /* @__PURE__ */ Ee({
  __name: "DatePicker",
  props: {
    ...xe
  },
  emits: [
    "tooltip-open",
    "tooltip-close",
    "mount",
    "update:internal-model-value",
    "update-flow-step",
    "reset-flow",
    "auto-apply",
    "focus-menu",
    "select-date",
    "range-start",
    "range-end",
    "invalid-fixed-range",
    "time-update",
    "am-pm-change",
    "time-picker-open",
    "time-picker-close",
    "recalculate-position",
    "update-month-year",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, {
      calendars: f,
      month: o,
      year: s,
      modelValue: C,
      time: A,
      disabledTimesConfig: y,
      validateTime: R,
      getCalendarDays: w,
      getMarker: Y,
      handleArrow: E,
      handleScroll: M,
      handleSwipe: F,
      selectDate: T,
      updateMonthYear: H,
      presetDate: B,
      selectCurrentDate: P,
      updateTime: I
    } = Br(a, n, q, N), L = Tt(), { setHoverDate: J, getDayClassData: $, clearHoverDate: se } = El(C, a), { defaultedMultiCalendars: le } = Re(a), ae = x([]), _ = x([]), z = x(null), ee = Ke(L, "calendar"), V = Ke(L, "monthYear"), c = Ke(L, "timePicker"), h = (l) => {
      a.shadow || n("mount", l);
    };
    pt(
      f,
      () => {
        a.shadow || setTimeout(() => {
          n("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const v = Q(() => (l) => w(o.value(l), s.value(l)).map((S) => ({
      ...S,
      days: S.days.map((j) => (j.marker = Y(j), j.classData = $(j), j))
    })));
    function q(l) {
      var S;
      l || l === 0 ? (S = _.value[l]) == null || S.triggerTransition(o.value(l), s.value(l)) : _.value.forEach((j, d) => j.triggerTransition(o.value(d), s.value(d)));
    }
    function N() {
      n("update-flow-step");
    }
    const m = (l, S = !1) => {
      T(l, S), a.spaceConfirm && n("select-date");
    };
    return t({
      clearHoverDate: se,
      presetDate: B,
      selectCurrentDate: P,
      toggleMonthPicker: (l, S, j = 0) => {
        var d;
        (d = ae.value[j]) == null || d.toggleMonthPicker(l, S);
      },
      toggleYearPicker: (l, S, j = 0) => {
        var d;
        (d = ae.value[j]) == null || d.toggleYearPicker(l, S);
      },
      toggleTimePicker: (l, S, j) => {
        var d;
        (d = z.value) == null || d.toggleTimePicker(l, S, j);
      },
      handleArrow: E,
      updateMonthYear: H,
      getSidebarProps: () => ({
        modelValue: C,
        month: o,
        year: s,
        time: A,
        updateTime: I,
        updateMonthYear: H,
        selectDate: T,
        presetDate: B
      })
    }), (l, S) => (D(), G(ke, null, [
      Qe(sa, {
        "multi-calendars": u(le).count,
        collapse: l.collapse
      }, {
        default: ye(({ instance: j, index: d }) => [
          l.disableMonthYearSelect ? X("", !0) : (D(), Me(Mr, Ne({
            key: 0,
            ref: (p) => {
              p && (ae.value[d] = p);
            },
            months: u(vn)(l.formatLocale, l.locale, l.monthNameFormat),
            years: u(Ea)(l.yearRange, l.locale, l.reverseYears),
            month: u(o)(j),
            year: u(s)(j),
            instance: j
          }, l.$props, {
            onMount: S[0] || (S[0] = (p) => h(u(At).header)),
            onResetFlow: S[1] || (S[1] = (p) => l.$emit("reset-flow")),
            onUpdateMonthYear: (p) => u(H)(j, p),
            onOverlayClosed: S[2] || (S[2] = (p) => l.$emit("focus-menu"))
          }), ze({ _: 2 }, [
            Se(u(V), (p, de) => ({
              name: p,
              fn: ye((ne) => [
                ie(l.$slots, p, Be(He(ne)))
              ])
            }))
          ]), 1040, ["months", "years", "month", "year", "instance", "onUpdateMonthYear"])),
          Qe(Or, Ne({
            ref: (p) => {
              p && (_.value[d] = p);
            },
            "mapped-dates": v.value(j),
            month: u(o)(j),
            year: u(s)(j),
            instance: j
          }, l.$props, {
            onSelectDate: (p) => u(T)(p, j !== 1),
            onHandleSpace: (p) => m(p, j !== 1),
            onSetHoverDate: S[3] || (S[3] = (p) => u(J)(p)),
            onHandleScroll: (p) => u(M)(p, j),
            onHandleSwipe: (p) => u(F)(p, j),
            onMount: S[4] || (S[4] = (p) => h(u(At).calendar)),
            onResetFlow: S[5] || (S[5] = (p) => l.$emit("reset-flow")),
            onTooltipOpen: S[6] || (S[6] = (p) => l.$emit("tooltip-open", p)),
            onTooltipClose: S[7] || (S[7] = (p) => l.$emit("tooltip-close", p))
          }), ze({ _: 2 }, [
            Se(u(ee), (p, de) => ({
              name: p,
              fn: ye((ne) => [
                ie(l.$slots, p, Be(He({ ...ne })))
              ])
            }))
          ]), 1040, ["mapped-dates", "month", "year", "instance", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
        ]),
        _: 3
      }, 8, ["multi-calendars", "collapse"]),
      l.enableTimePicker ? (D(), G("div", Yr, [
        l.$slots["time-picker"] ? ie(l.$slots, "time-picker", Be(Ne({ key: 0 }, { time: u(A), updateTime: u(I) }))) : (D(), Me(Cn, Ne({
          key: 1,
          ref_key: "timePickerRef",
          ref: z
        }, l.$props, {
          hours: u(A).hours,
          minutes: u(A).minutes,
          seconds: u(A).seconds,
          "internal-model-value": l.internalModelValue,
          "disabled-times-config": u(y),
          "validate-time": u(R),
          onMount: S[8] || (S[8] = (j) => h(u(At).timePicker)),
          "onUpdate:hours": S[9] || (S[9] = (j) => u(I)(j)),
          "onUpdate:minutes": S[10] || (S[10] = (j) => u(I)(j, !1)),
          "onUpdate:seconds": S[11] || (S[11] = (j) => u(I)(j, !1, !0)),
          onResetFlow: S[12] || (S[12] = (j) => l.$emit("reset-flow")),
          onOverlayClosed: S[13] || (S[13] = (j) => l.$emit("time-picker-close")),
          onOverlayOpened: S[14] || (S[14] = (j) => l.$emit("time-picker-open", j)),
          onAmPmChange: S[15] || (S[15] = (j) => l.$emit("am-pm-change", j))
        }), ze({ _: 2 }, [
          Se(u(c), (j, d) => ({
            name: j,
            fn: ye((p) => [
              ie(l.$slots, j, Be(He(p)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"]))
      ])) : X("", !0)
    ], 64));
  }
}), Nr = (e, t) => {
  const r = x(), {
    defaultedMultiCalendars: n,
    defaultedConfig: a,
    defaultedHighlight: f,
    defaultedRange: o,
    propDates: s,
    defaultedFilters: C,
    defaultedMultiDates: A
  } = Re(e), { modelValue: y, year: R, month: w, calendars: Y } = Kt(e, t), { isDisabled: E } = yt(e), { selectYear: M, groupedYears: F, showYearPicker: T, isDisabled: H, toggleYearPicker: B, handleYearSelect: P, handleYear: I } = Pn({
    modelValue: y,
    multiCalendars: n,
    highlight: f,
    calendars: Y,
    propDates: s,
    month: w,
    year: R,
    filters: C,
    props: e,
    emit: t
  }), L = (h, v) => [h, v].map((q) => nt(q, "MMMM", { locale: e.formatLocale })).join("-"), J = Q(() => (h) => y.value ? Array.isArray(y.value) ? y.value.some((v) => ja(h, v)) : ja(y.value, h) : !1), $ = (h) => {
    if (o.value.enabled) {
      if (Array.isArray(y.value)) {
        const v = we(h, y.value[0]) || we(h, y.value[1]);
        return la(y.value, r.value, h) && !v;
      }
      return !1;
    }
    return !1;
  }, se = (h, v) => h.quarter === Qa(v) && h.year === ge(v), le = (h) => typeof f.value == "function" ? f.value({ quarter: Qa(h), year: ge(h) }) : !!f.value.quarters.find((v) => se(v, h)), ae = Q(() => (h) => {
    const v = Ae(/* @__PURE__ */ new Date(), { year: R.value(h) });
    return Qn({
      start: qn(v),
      end: Xn(v)
    }).map((q) => {
      const N = Jn(q), m = Ga(q), K = E(q), te = $(N), i = le(N);
      return {
        text: L(N, m),
        value: N,
        active: J.value(N),
        highlighted: i,
        disabled: K,
        isBetween: te
      };
    });
  }), _ = (h) => {
    Wa(h, y, A.value.limit), t("auto-apply", !0);
  }, z = (h) => {
    y.value = Ha(y, h, t), ua(y.value, t, e.autoApply, e.modelAuto);
  }, ee = (h) => {
    y.value = h, t("auto-apply");
  };
  return {
    defaultedConfig: a,
    defaultedMultiCalendars: n,
    groupedYears: F,
    year: R,
    isDisabled: H,
    quarters: ae,
    showYearPicker: T,
    modelValue: y,
    setHoverDate: (h) => {
      r.value = h;
    },
    selectYear: M,
    selectQuarter: (h, v, q) => {
      if (!q)
        return Y.value[v].month = be(Ga(h)), A.value.enabled ? _(h) : o.value.enabled ? z(h) : ee(h);
    },
    toggleYearPicker: B,
    handleYearSelect: P,
    handleYear: I
  };
}, Er = { class: "dp--quarter-items" }, Fr = ["disabled", "onClick", "onMouseover"], Lr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "QuarterPicker",
  props: {
    ...xe
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "overlay-closed",
    "auto-apply",
    "range-start",
    "range-end"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = Tt(), o = Ke(f, "yearMode"), {
      defaultedMultiCalendars: s,
      defaultedConfig: C,
      groupedYears: A,
      year: y,
      isDisabled: R,
      quarters: w,
      modelValue: Y,
      showYearPicker: E,
      setHoverDate: M,
      selectQuarter: F,
      toggleYearPicker: T,
      handleYearSelect: H,
      handleYear: B
    } = Nr(a, n);
    return t({ getSidebarProps: () => ({
      modelValue: Y,
      year: y,
      selectQuarter: F,
      handleYearSelect: H,
      handleYear: B
    }) }), (I, L) => (D(), Me(sa, {
      "multi-calendars": u(s).count,
      collapse: I.collapse,
      stretch: ""
    }, {
      default: ye(({ instance: J }) => [
        me("div", {
          class: "dp-quarter-picker-wrap",
          style: Je({ minHeight: `${u(C).modeHeight}px` })
        }, [
          me("div", null, [
            Qe(Tn, Ne(I.$props, {
              items: u(A)(J),
              instance: J,
              "show-year-picker": u(E)[J],
              year: u(y)(J),
              "is-disabled": ($) => u(R)(J, $),
              onHandleYear: ($) => u(B)(J, $),
              onYearSelect: ($) => u(H)($, J),
              onToggleYearPicker: ($) => u(T)(J, $ == null ? void 0 : $.flow, $ == null ? void 0 : $.show)
            }), ze({ _: 2 }, [
              Se(u(o), ($, se) => ({
                name: $,
                fn: ye((le) => [
                  ie(I.$slots, $, Be(He(le)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          me("div", Er, [
            (D(!0), G(ke, null, Se(u(w)(J), ($, se) => (D(), G("div", { key: se }, [
              me("button", {
                type: "button",
                class: De(["dp--qr-btn", {
                  "dp--qr-btn-active": $.active,
                  "dp--qr-btn-between": $.isBetween,
                  "dp--qr-btn-disabled": $.disabled,
                  "dp--highlighted": $.highlighted
                }]),
                disabled: $.disabled,
                onClick: (le) => u(F)($.value, J, $.disabled),
                onMouseover: (le) => u(M)($.value)
              }, [
                I.$slots.quarter ? ie(I.$slots, "quarter", {
                  key: 0,
                  value: $.value,
                  text: $.text
                }) : (D(), G(ke, { key: 1 }, [
                  dt(Ve($.text), 1)
                ], 64))
              ], 42, Fr)
            ]))), 128))
          ])
        ], 4)
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), Vr = ["id", "aria-label"], Wr = {
  key: 0,
  class: "dp--menu-load-container"
}, Hr = /* @__PURE__ */ me("span", { class: "dp--menu-loader" }, null, -1), zr = [
  Hr
], Ur = {
  key: 0,
  class: "dp__sidebar_left"
}, Kr = ["onClick", "onKeydown"], jr = {
  key: 2,
  class: "dp__sidebar_right"
}, Gr = {
  key: 3,
  class: "dp__action_extra"
}, nn = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerMenu",
  props: {
    ...oa,
    shadow: { type: Boolean, default: !1 },
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    noOverlayFocus: { type: Boolean, default: !1 },
    collapse: { type: Boolean, default: !1 }
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = x(null), o = Q(() => {
      const { openOnTop: k, ...U } = a;
      return {
        ...U,
        flowStep: $.value,
        collapse: a.collapse,
        noOverlayFocus: a.noOverlayFocus,
        menuWrapRef: f.value
      };
    }), { setMenuFocused: s, setShiftKey: C, control: A } = $n(), y = Tt(), { defaultedTextInput: R, defaultedInline: w, defaultedConfig: Y } = Re(a), E = x(null), M = x(0), F = x(null), T = x(!1), H = x(null);
    Ue(() => {
      if (!a.shadow) {
        T.value = !0, B(), window.addEventListener("resize", B);
        const k = Ie(f);
        if (k && !R.value.enabled && !w.value.enabled && (s(!0), z()), k) {
          const U = (ve) => {
            Y.value.allowPreventDefault && ve.preventDefault(), vt(ve, Y.value, !0);
          };
          k.addEventListener("pointerdown", U), k.addEventListener("mousedown", U);
        }
      }
    }), aa(() => {
      window.removeEventListener("resize", B);
    });
    const B = () => {
      const k = Ie(F);
      k && (M.value = k.getBoundingClientRect().width);
    }, { arrowRight: P, arrowLeft: I, arrowDown: L, arrowUp: J } = gt(), { flowStep: $, updateFlowStep: se, childMount: le, resetFlow: ae } = Fl(a, n, H), _ = Q(() => a.monthPicker ? er : a.yearPicker ? ar : a.timePicker ? br : a.quarterPicker ? Lr : Ir), z = () => {
      const k = Ie(f);
      k && k.focus({ preventScroll: !0 });
    }, ee = Q(() => {
      var k;
      return ((k = H.value) == null ? void 0 : k.getSidebarProps()) || {};
    }), V = () => {
      a.openOnTop && n("recalculate-position");
    }, c = Ke(y, "action"), h = Q(() => a.monthPicker || a.yearPicker ? Ke(y, "monthYear") : a.timePicker ? Ke(y, "timePicker") : Ke(y, "shared")), v = Q(() => a.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), q = Q(() => ({
      dp__menu_disabled: a.disabled,
      dp__menu_readonly: a.readonly,
      "dp-menu-loading": a.loading
    })), N = Q(
      () => ({
        dp__menu: !0,
        dp__menu_index: !w.value.enabled,
        dp__relative: w.value.enabled,
        [a.menuClassName]: !!a.menuClassName
      })
    ), m = (k) => {
      vt(k, Y.value, !0);
    }, K = () => {
      a.escClose && n("close-picker");
    }, te = (k) => {
      if (a.arrowNavigation) {
        if (k === "up")
          return J();
        if (k === "down")
          return L();
        if (k === "left")
          return I();
        if (k === "right")
          return P();
      } else
        k === "left" || k === "up" ? j("handleArrow", "left", 0, k === "up") : j("handleArrow", "right", 0, k === "down");
    }, i = (k) => {
      C(k.shiftKey), !a.disableMonthYearSelect && k.code === "Tab" && k.target.classList.contains("dp__menu") && A.value.shiftKeyInMenu && (k.preventDefault(), vt(k, Y.value, !0), n("close-picker"));
    }, b = () => {
      z(), n("time-picker-close");
    }, l = (k) => {
      var U, ve, ue;
      (U = H.value) == null || U.toggleTimePicker(!1, !1), (ve = H.value) == null || ve.toggleMonthPicker(!1, !1, k), (ue = H.value) == null || ue.toggleYearPicker(!1, !1, k);
    }, S = (k, U = 0) => {
      var ve, ue, he;
      return k === "month" ? (ve = H.value) == null ? void 0 : ve.toggleMonthPicker(!1, !0, U) : k === "year" ? (ue = H.value) == null ? void 0 : ue.toggleYearPicker(!1, !0, U) : k === "time" ? (he = H.value) == null ? void 0 : he.toggleTimePicker(!0, !1) : l(U);
    }, j = (k, ...U) => {
      var ve, ue;
      (ve = H.value) != null && ve[k] && ((ue = H.value) == null || ue[k](...U));
    }, d = () => {
      j("selectCurrentDate");
    }, p = (k, U) => {
      j("presetDate", k, U);
    }, de = () => {
      j("clearHoverDate");
    };
    return t({
      updateMonthYear: (k, U) => {
        j("updateMonthYear", k, U);
      },
      switchView: S
    }), (k, U) => {
      var ve, ue, he;
      return D(), G("div", {
        id: k.uid ? `dp-menu-${k.uid}` : void 0,
        ref_key: "dpMenuRef",
        ref: f,
        tabindex: "0",
        role: "dialog",
        "aria-label": (ve = k.ariaLabels) == null ? void 0 : ve.menu,
        class: De(N.value),
        onMouseleave: de,
        onClick: m,
        onKeydown: [
          pe(K, ["esc"]),
          U[18] || (U[18] = pe($e((oe) => te("left"), ["prevent"]), ["left"])),
          U[19] || (U[19] = pe($e((oe) => te("up"), ["prevent"]), ["up"])),
          U[20] || (U[20] = pe($e((oe) => te("down"), ["prevent"]), ["down"])),
          U[21] || (U[21] = pe($e((oe) => te("right"), ["prevent"]), ["right"])),
          i
        ]
      }, [
        (k.disabled || k.readonly) && u(w).enabled || k.loading ? (D(), G("div", {
          key: 0,
          class: De(q.value)
        }, [
          k.loading ? (D(), G("div", Wr, zr)) : X("", !0)
        ], 2)) : X("", !0),
        !u(w).enabled && !k.teleportCenter ? (D(), G("div", {
          key: 1,
          class: De(v.value)
        }, null, 2)) : X("", !0),
        me("div", {
          ref_key: "innerMenuRef",
          ref: F,
          class: De({
            dp__menu_content_wrapper: ((ue = k.presetDates) == null ? void 0 : ue.length) || !!k.$slots["left-sidebar"] || !!k.$slots["right-sidebar"],
            "dp--menu-content-wrapper-collapsed": e.collapse && ((he = k.presetDates) == null ? void 0 : he.length) || !!k.$slots["left-sidebar"] || !!k.$slots["right-sidebar"]
          }),
          style: Je({ "--dp-menu-width": `${M.value}px` })
        }, [
          k.$slots["left-sidebar"] ? (D(), G("div", Ur, [
            ie(k.$slots, "left-sidebar", Be(He(ee.value)))
          ])) : X("", !0),
          k.presetDates.length ? (D(), G("div", {
            key: 1,
            class: De({ "dp--preset-dates-collapsed": e.collapse, "dp--preset-dates": !0 })
          }, [
            (D(!0), G(ke, null, Se(k.presetDates, (oe, We) => (D(), G(ke, { key: We }, [
              oe.slot ? ie(k.$slots, oe.slot, {
                key: 0,
                presetDate: p,
                label: oe.label,
                value: oe.value
              }) : (D(), G("button", {
                key: 1,
                type: "button",
                style: Je(oe.style || {}),
                class: De(["dp__btn dp--preset-range", { "dp--preset-range-collapsed": e.collapse }]),
                onClick: $e((Fe) => p(oe.value, oe.noTz), ["prevent"]),
                onKeydown: [
                  pe($e((Fe) => p(oe.value, oe.noTz), ["prevent"]), ["enter"]),
                  pe($e((Fe) => p(oe.value, oe.noTz), ["prevent"]), ["space"])
                ]
              }, Ve(oe.label), 47, Kr))
            ], 64))), 128))
          ], 2)) : X("", !0),
          me("div", {
            ref_key: "calendarWrapperRef",
            ref: E,
            class: "dp__instance_calendar",
            role: "document"
          }, [
            (D(), Me(na(_.value), Ne({
              ref_key: "dynCmpRef",
              ref: H
            }, o.value, {
              "flow-step": u($),
              onMount: u(le),
              onUpdateFlowStep: u(se),
              onResetFlow: u(ae),
              onFocusMenu: z,
              onSelectDate: U[0] || (U[0] = (oe) => k.$emit("select-date")),
              onDateUpdate: U[1] || (U[1] = (oe) => k.$emit("date-update", oe)),
              onTooltipOpen: U[2] || (U[2] = (oe) => k.$emit("tooltip-open", oe)),
              onTooltipClose: U[3] || (U[3] = (oe) => k.$emit("tooltip-close", oe)),
              onAutoApply: U[4] || (U[4] = (oe) => k.$emit("auto-apply", oe)),
              onRangeStart: U[5] || (U[5] = (oe) => k.$emit("range-start", oe)),
              onRangeEnd: U[6] || (U[6] = (oe) => k.$emit("range-end", oe)),
              onInvalidFixedRange: U[7] || (U[7] = (oe) => k.$emit("invalid-fixed-range", oe)),
              onTimeUpdate: U[8] || (U[8] = (oe) => k.$emit("time-update")),
              onAmPmChange: U[9] || (U[9] = (oe) => k.$emit("am-pm-change", oe)),
              onTimePickerOpen: U[10] || (U[10] = (oe) => k.$emit("time-picker-open", oe)),
              onTimePickerClose: b,
              onRecalculatePosition: V,
              onUpdateMonthYear: U[11] || (U[11] = (oe) => k.$emit("update-month-year", oe)),
              onAutoApplyInvalid: U[12] || (U[12] = (oe) => k.$emit("auto-apply-invalid", oe)),
              onInvalidDate: U[13] || (U[13] = (oe) => k.$emit("invalid-date", oe)),
              "onUpdate:internalModelValue": U[14] || (U[14] = (oe) => k.$emit("update:internal-model-value", oe))
            }), ze({ _: 2 }, [
              Se(h.value, (oe, We) => ({
                name: oe,
                fn: ye((Fe) => [
                  ie(k.$slots, oe, Be(He({ ...Fe })))
                ])
              }))
            ]), 1040, ["flow-step", "onMount", "onUpdateFlowStep", "onResetFlow"]))
          ], 512),
          k.$slots["right-sidebar"] ? (D(), G("div", jr, [
            ie(k.$slots, "right-sidebar", Be(He(ee.value)))
          ])) : X("", !0),
          k.$slots["action-extra"] ? (D(), G("div", Gr, [
            k.$slots["action-extra"] ? ie(k.$slots, "action-extra", {
              key: 0,
              selectCurrentDate: d
            }) : X("", !0)
          ])) : X("", !0)
        ], 6),
        !k.autoApply || u(Y).keepActionRow ? (D(), Me(Kl, Ne({
          key: 2,
          "menu-mount": T.value
        }, o.value, {
          "calendar-width": M.value,
          onClosePicker: U[15] || (U[15] = (oe) => k.$emit("close-picker")),
          onSelectDate: U[16] || (U[16] = (oe) => k.$emit("select-date")),
          onInvalidSelect: U[17] || (U[17] = (oe) => k.$emit("invalid-select")),
          onSelectNow: d
        }), ze({ _: 2 }, [
          Se(u(c), (oe, We) => ({
            name: oe,
            fn: ye((Fe) => [
              ie(k.$slots, oe, Be(He({ ...Fe })))
            ])
          }))
        ]), 1040, ["menu-mount", "calendar-width"])) : X("", !0)
      ], 42, Vr);
    };
  }
}), Qr = typeof window < "u" ? window : void 0, Ta = () => {
}, qr = (e) => Nn() ? (En(e), !0) : !1, Xr = (e, t, r, n) => {
  if (!e)
    return Ta;
  let a = Ta;
  const f = pt(
    () => u(e),
    (s) => {
      a(), s && (s.addEventListener(t, r, n), a = () => {
        s.removeEventListener(t, r, n), a = Ta;
      });
    },
    { immediate: !0, flush: "post" }
  ), o = () => {
    f(), a();
  };
  return qr(o), o;
}, Jr = (e, t, r, n = {}) => {
  const { window: a = Qr, event: f = "pointerdown" } = n;
  return a ? Xr(a, f, (s) => {
    const C = Ie(e), A = Ie(t);
    !C || !A || C === s.target || s.composedPath().includes(C) || s.composedPath().includes(A) || r(s);
  }, { passive: !0 }) : void 0;
}, Zr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "VueDatePicker",
  props: {
    ...oa
  },
  emits: [
    "update:model-value",
    "update:model-timezone-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = Tt(), o = x(!1), s = ea(a, "modelValue"), C = ea(a, "timezone"), A = x(null), y = x(null), R = x(null), w = x(!1), Y = x(null), E = x(!1), M = x(!1), F = x(!1), { setMenuFocused: T, setShiftKey: H } = $n(), { clearArrowNav: B } = gt(), { validateDate: P, isValidTime: I } = yt(a), {
      defaultedTransitions: L,
      defaultedTextInput: J,
      defaultedInline: $,
      defaultedConfig: se,
      defaultedRange: le,
      defaultedMultiDates: ae
    } = Re(a), { menuTransition: _, showTransition: z } = Ut(L);
    Ue(() => {
      i(a.modelValue), it().then(() => {
        if (!$.value.enabled) {
          const O = N(Y.value);
          O == null || O.addEventListener("scroll", k), window == null || window.addEventListener("resize", U);
        }
      }), $.value.enabled && (o.value = !0), window == null || window.addEventListener("keyup", ve), window == null || window.addEventListener("keydown", ue);
    }), aa(() => {
      if (!$.value.enabled) {
        const O = N(Y.value);
        O == null || O.removeEventListener("scroll", k), window == null || window.removeEventListener("resize", U);
      }
      window == null || window.removeEventListener("keyup", ve), window == null || window.removeEventListener("keydown", ue);
    });
    const ee = Ke(f, "all", a.presetDates), V = Ke(f, "input");
    pt(
      [s, C],
      () => {
        i(s.value);
      },
      { deep: !0 }
    );
    const { openOnTop: c, menuStyle: h, xCorrect: v, setMenuPosition: q, getScrollableParent: N, shadowRender: m } = Yl({
      menuRef: A,
      menuRefInner: y,
      inputRef: R,
      pickerWrapperRef: Y,
      inline: $,
      emit: n,
      props: a,
      slots: f
    }), {
      inputValue: K,
      internalModelValue: te,
      parseExternalModelValue: i,
      emitModelValue: b,
      formatInputValue: l,
      checkBeforeEmit: S
    } = Ol(n, a, w), j = Q(
      () => ({
        dp__main: !0,
        dp__theme_dark: a.dark,
        dp__theme_light: !a.dark,
        dp__flex_display: $.value.enabled,
        "dp--flex-display-collapsed": F.value,
        dp__flex_display_with_input: $.value.input
      })
    ), d = Q(() => a.dark ? "dp__theme_dark" : "dp__theme_light"), p = Q(() => ({
      to: typeof a.teleport == "boolean" ? "body" : a.teleport,
      disabled: !a.teleport || $.value.enabled
    })), de = Q(() => ({ class: "dp__outer_menu_wrap" })), ne = Q(() => $.value.enabled && (a.timePicker || a.monthPicker || a.yearPicker || a.quarterPicker)), k = () => {
      o.value && (se.value.closeOnScroll ? Ge() : q());
    }, U = () => {
      var re;
      o.value && q();
      const O = (re = y.value) == null ? void 0 : re.$el.getBoundingClientRect().width;
      F.value = document.body.offsetWidth <= O;
    }, ve = (O) => {
      O.key === "Tab" && !$.value.enabled && !a.teleport && se.value.tabOutClosesMenu && (Y.value.contains(document.activeElement) || Ge()), M.value = O.shiftKey;
    }, ue = (O) => {
      M.value = O.shiftKey;
    }, he = () => {
      !a.disabled && !a.readonly && (m(nn, a), q(!1), o.value = !0, o.value && n("open"), o.value || Nt(), i(a.modelValue));
    }, oe = () => {
      var O;
      K.value = "", Nt(), (O = R.value) == null || O.setParsedDate(null), n("update:model-value", null), n("update:model-timezone-value", null), n("cleared"), se.value.closeOnClearValue && Ge();
    }, We = () => {
      const O = te.value;
      return !O || !Array.isArray(O) && P(O) ? !0 : Array.isArray(O) ? ae.value.enabled || O.length === 2 && P(O[0]) && P(O[1]) ? !0 : le.value.partialRange && !a.timePicker ? P(O[0]) : !1 : !1;
    }, Fe = () => {
      S() && We() ? (b(), Ge()) : n("invalid-select", te.value);
    }, Ye = (O) => {
      ht(), b(), se.value.closeOnAutoApply && !O && Ge();
    }, ht = () => {
      R.value && J.value.enabled && R.value.setParsedDate(te.value);
    }, It = (O = !1) => {
      a.autoApply && I(te.value) && We() && (le.value.enabled && Array.isArray(te.value) ? (le.value.partialRange || te.value.length === 2) && Ye(O) : Ye(O));
    }, Nt = () => {
      J.value.enabled || (te.value = null);
    }, Ge = () => {
      $.value.enabled || (o.value && (o.value = !1, v.value = !1, T(!1), H(!1), B(), n("closed"), K.value && i(s.value)), Nt(), n("blur"));
    }, ia = (O, re, fe = !1) => {
      if (!O) {
        te.value = null;
        return;
      }
      const rt = Array.isArray(O) ? !O.some((bt) => !P(bt)) : P(O), et = I(O);
      rt && et && (te.value = O, re && (E.value = fe, Fe(), n("text-submit")));
    }, da = () => {
      a.autoApply && I(te.value) && b(), ht();
    }, Gt = () => o.value ? Ge() : he(), ca = (O) => {
      te.value = O;
    }, fa = () => {
      J.value.enabled && (w.value = !0, l()), n("focus");
    }, va = () => {
      if (J.value.enabled && (w.value = !1, i(a.modelValue), E.value)) {
        const O = ll(Y.value, M.value);
        O == null || O.focus();
      }
      n("blur");
    }, za = (O) => {
      y.value && y.value.updateMonthYear(0, {
        month: Xa(O.month),
        year: Xa(O.year)
      });
    }, g = (O) => {
      i(O ?? a.modelValue);
    }, Z = (O, re) => {
      var fe;
      (fe = y.value) == null || fe.switchView(O, re);
    }, ce = (O) => se.value.onClickOutside ? se.value.onClickOutside(O) : Ge();
    return Jr(A, R, () => ce(We)), t({
      closeMenu: Ge,
      selectDate: Fe,
      clearValue: oe,
      openMenu: he,
      onScroll: k,
      formatInputValue: l,
      // exposed for testing purposes
      updateInternalModelValue: ca,
      // modify internal modelValue
      setMonthYear: za,
      parseModel: g,
      switchView: Z,
      toggleMenu: Gt
    }), (O, re) => (D(), G("div", {
      ref_key: "pickerWrapperRef",
      ref: Y,
      class: De(j.value),
      "data-datepicker-instance": ""
    }, [
      Qe(Hl, Ne({
        ref_key: "inputRef",
        ref: R,
        "input-value": u(K),
        "onUpdate:inputValue": re[0] || (re[0] = (fe) => Ka(K) ? K.value = fe : null),
        "is-menu-open": o.value
      }, O.$props, {
        onClear: oe,
        onOpen: he,
        onSetInputDate: ia,
        onSetEmptyDate: u(b),
        onSelectDate: Fe,
        onToggle: Gt,
        onClose: Ge,
        onFocus: fa,
        onBlur: va,
        onRealBlur: re[1] || (re[1] = (fe) => w.value = !1)
      }), ze({ _: 2 }, [
        Se(u(V), (fe, rt) => ({
          name: fe,
          fn: ye((et) => [
            ie(O.$slots, fe, Be(He(et)))
          ])
        }))
      ]), 1040, ["input-value", "is-menu-open", "onSetEmptyDate"]),
      (D(), Me(na(O.teleport ? Fn : "div"), Be(He(p.value)), {
        default: ye(() => [
          Qe(Bt, {
            name: u(_)(u(c)),
            css: u(z) && !u($).enabled
          }, {
            default: ye(() => [
              o.value ? (D(), G("div", Ne({
                key: 0,
                ref_key: "dpWrapMenuRef",
                ref: A
              }, de.value, {
                class: { "dp--menu-wrapper": !u($).enabled },
                style: u($).enabled ? void 0 : u(h)
              }), [
                Qe(nn, Ne({
                  ref_key: "dpMenuRef",
                  ref: y
                }, O.$props, {
                  "internal-model-value": u(te),
                  "onUpdate:internalModelValue": re[2] || (re[2] = (fe) => Ka(te) ? te.value = fe : null),
                  class: { [d.value]: !0, "dp--menu-wrapper": O.teleport },
                  "open-on-top": u(c),
                  "no-overlay-focus": ne.value,
                  collapse: F.value,
                  onClosePicker: Ge,
                  onSelectDate: Fe,
                  onAutoApply: It,
                  onTimeUpdate: da,
                  onFlowStep: re[3] || (re[3] = (fe) => O.$emit("flow-step", fe)),
                  onUpdateMonthYear: re[4] || (re[4] = (fe) => O.$emit("update-month-year", fe)),
                  onInvalidSelect: re[5] || (re[5] = (fe) => O.$emit("invalid-select", u(te))),
                  onAutoApplyInvalid: re[6] || (re[6] = (fe) => O.$emit("invalid-select", fe)),
                  onInvalidFixedRange: re[7] || (re[7] = (fe) => O.$emit("invalid-fixed-range", fe)),
                  onRecalculatePosition: u(q),
                  onTooltipOpen: re[8] || (re[8] = (fe) => O.$emit("tooltip-open", fe)),
                  onTooltipClose: re[9] || (re[9] = (fe) => O.$emit("tooltip-close", fe)),
                  onTimePickerOpen: re[10] || (re[10] = (fe) => O.$emit("time-picker-open", fe)),
                  onTimePickerClose: re[11] || (re[11] = (fe) => O.$emit("time-picker-close", fe)),
                  onAmPmChange: re[12] || (re[12] = (fe) => O.$emit("am-pm-change", fe)),
                  onRangeStart: re[13] || (re[13] = (fe) => O.$emit("range-start", fe)),
                  onRangeEnd: re[14] || (re[14] = (fe) => O.$emit("range-end", fe)),
                  onDateUpdate: re[15] || (re[15] = (fe) => O.$emit("date-update", fe)),
                  onInvalidDate: re[16] || (re[16] = (fe) => O.$emit("invalid-date", fe))
                }), ze({ _: 2 }, [
                  Se(u(ee), (fe, rt) => ({
                    name: fe,
                    fn: ye((et) => [
                      ie(O.$slots, fe, Be(He({ ...et })))
                    ])
                  }))
                ]), 1040, ["internal-model-value", "class", "open-on-top", "no-overlay-focus", "collapse", "onRecalculatePosition"])
              ], 16)) : X("", !0)
            ]),
            _: 3
          }, 8, ["name", "css"])
        ]),
        _: 3
      }, 16))
    ], 2));
  }
}), On = /* @__PURE__ */ (() => {
  const e = Zr;
  return e.install = (t) => {
    t.component("Vue3DatePicker", e);
  }, e;
})(), xr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: On
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(xr).forEach(([e, t]) => {
  e !== "default" && (On[e] = t);
});
export {
  On as default
};
